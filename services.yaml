services:
  aws:
    name: AWS
    method: SDK
    sdk_type: aws
    service: sts
    operation: GetCallerIdentity
    requires_secret: true
    secret_name: secret
    response_fields:
      - Account
      - Arn
    details_format: "account: {{.Account}}, arn: {{.Arn}}"

  algolia:
    name: Algolia
    method: GET
    url: https://{{.AppID}}.algolia.net/1/keys
    headers:
      X-Algolia-API-Key: "{{.Key}}"
      X-Algolia-Application-Id: "{{.AppID}}"
    success_status: 200
    response_type: json
    requires_secret: false

  autopilot:
    name: Autopilot
    method: GET
    url: https://api2.autopilothq.com/v1/account
    headers:
      autopilotapikey: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  bitbucket:
    name: Bitbucket
    method: GET
    url: https://api.bitbucket.org/2.0/user
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - username
      - display_name
    details_format: "user: {{.username}}"
    requires_secret: false

  bitly:
    name: Bitly
    method: GET
    url: https://api-ssl.bitly.com/v4/user
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - login
      - name
    details_format: "user: {{.login}}"
    requires_secret: false

  buildkite:
    name: Buildkite
    method: GET
    url: https://api.buildkite.com/v2/user
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
    details_format: "user: {{.name}}"
    requires_secret: false

  circleci:
    name: CircleCI
    method: GET
    url: https://circleci.com/api/v2/me
    headers:
      Circle-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - login
      - name
    details_format: "user: {{.login}}"
    requires_secret: false

  clearbit:
    name: Clearbit
    method: GET
    url: https://company.clearbit.com/v2/companies/find?domain=stripe.com
    auth_type: basic
    auth_user: "{{.Key}}"
    auth_pass: ""
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  clerk:
    name: Clerk
    method: GET
    url: https://api.clerk.com/v1/me
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - id
      - first_name
      - last_name
    details_format: "user: {{.first_name}} {{.last_name}}"
    requires_secret: false

  digitalocean:
    name: DigitalOcean
    method: GET
    url: https://api.digitalocean.com/v2/account
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - account.email
      - account.uuid
    details_format: "email: {{.account.email}}"
    requires_secret: false

  doppler:
    name: Doppler
    method: GET
    url: https://api.doppler.com/v3/workplace
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - workplace.name
      - workplace.id
    details_format: "workplace: {{.workplace.name}}"
    requires_secret: false

  evolutionapi:
    name: EvolutionAPI
    method: GET
    url: https://api.evolution-api.com/
    headers:
      apikey: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - version
      - message
    details_format: "version: {{.version}}"
    requires_secret: false

  eventbrite:
    name: Eventbrite
    method: GET
    url: https://www.eventbriteapi.com/v3/users/me/
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - name
      - email
    details_format: "user: {{.name}}"
    requires_secret: false

  github:
    name: GitHub
    method: GET
    url: https://api.github.com/user
    headers:
      Authorization: "token {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - login
      - name
    details_format: "user: {{.login}}"
    error_field: message
    requires_secret: false

  gitlab:
    name: GitLab
    method: GET
    url: https://gitlab.com/api/v4/user
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - username
      - name
    details_format: "user: {{.username}}"
    requires_secret: false

  getresponse:
    name: GetResponse
    method: GET
    url: https://api.getresponse.com/v3/accounts
    headers:
      X-Auth-Token: "api-key {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  googlecloud:
    name: GoogleCloud
    method: GET
    url: https://cloudresourcemanager.googleapis.com/v1/projects
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  helpscout:
    name: HelpScout
    method: GET
    url: https://api.helpscout.net/v2/users/me
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
      - firstName
      - lastName
    details_format: "user: {{.firstName}} {{.lastName}}"
    requires_secret: false

  honeycomb:
    name: Honeycomb
    method: GET
    url: https://api.honeycomb.io/1/auth
    headers:
      X-Honeycomb-Team: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  hubspot:
    name: HubSpot
    method: GET
    url: https://api.hubapi.com/oauth/v1/access-tokens/{{.Key}}
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - user
      - hub_id
    details_format: "user: {{.user}}"
    requires_secret: false

  huggingface:
    name: HuggingFace
    method: GET
    url: https://huggingface.co/api/whoami-v2
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - name
      - fullname
    details_format: "user: {{.name}}"
    requires_secret: false

  jfrog:
    name: JFrog
    method: GET
    url: https://{{.Domain}}.jfrog.io/artifactory/api/system/ping
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    requires_secret: false

  jira:
    name: Jira
    method: GET
    url: https://api.atlassian.com/me
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
      - name
    details_format: "user: {{.name}}"
    requires_secret: false

  klaviyo:
    name: Klaviyo
    method: GET
    url: https://a.klaviyo.com/api/accounts/
    headers:
      Authorization: "Klaviyo-API-Key {{.Key}}"
      accept: "application/json"
      revision: "2024-10-15"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  launchdarkly:
    name: LaunchDarkly
    method: GET
    url: https://app.launchdarkly.com/api/v2/members/me
    headers:
      Authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
      - firstName
      - lastName
    details_format: "user: {{.firstName}} {{.lastName}}"
    requires_secret: false

  madkudu:
    name: MadKudu
    method: GET
    auth_type: basic
    auth_user: "{{.Key}}"
    auth_pass: ""
    url: https://api.madkudu.com/v1/companies
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  mailchimp:
    name: Mailchimp
    method: GET
    url: https://{{.DC}}.api.mailchimp.com/3.0/
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  mailerlite:
    name: MailerLite
    method: GET
    url: https://connect.mailerlite.com/api/me
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - data.email
      - data.name
    details_format: "user: {{.data.name}}"
    requires_secret: false

  mailgun:
    name: Mailgun
    method: GET
    auth_type: basic
    auth_user: api
    auth_pass: "{{.Key}}"
    url: https://api.mailgun.net/v3/domains
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  mongodb:
    name: MongoDB
    method: GET
    url: https://cloud.mongodb.com/api/atlas/v1.0/groups
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  nvidia:
    name: NVIDIA
    method: GET
    url: https://api.ngc.nvidia.com/v2/org/nvidia/team/cloud-functions/users
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  notion:
    name: Notion
    method: GET
    url: https://api.notion.com/v1/users/me
    headers:
      Authorization: "Bearer {{.Key}}"
      Notion-Version: "2022-06-28"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - name
      - type
    details_format: "user: {{.name}}"
    requires_secret: false

  npm:
    name: NPM
    method: GET
    url: https://registry.npmjs.org/-/whoami
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - username
    details_format: "user: {{.username}}"
    requires_secret: false

  okta:
    name: Okta
    method: GET
    url: https://{{.Domain}}.okta.com/api/v1/users/me
    headers:
      Authorization: "SSWS {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - profile.email
      - profile.login
    details_format: "user: {{.profile.login}}"
    requires_secret: false

  omnisend:
    name: Omnisend
    method: GET
    url: https://api.omnisend.com/v3/accounts
    headers:
      X-API-KEY: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  openai:
    name: OpenAI
    method: GET
    url: https://api.openai.com/v1/models
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  opsgenie:
    name: OpsGenie
    method: GET
    url: https://api.opsgenie.com/v2/account
    headers:
      Authorization: "GenieKey {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - data.name
    details_format: "account: {{.data.name}}"
    requires_secret: false

  pandadoc:
    name: PandaDoc
    method: GET
    url: https://api.pandadoc.com/public/v1/members/current
    headers:
      Authorization: "API-Key {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
      - first_name
      - last_name
    details_format: "user: {{.first_name}} {{.last_name}}"
    requires_secret: false

  paypal:
    name: PayPal
    method: GET
    url: https://api.paypal.com/v1/identity/oauth2/userinfo?schema=openid
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  paystack:
    name: Paystack
    method: GET
    url: https://api.paystack.co/balance
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  pipedrive:
    name: Pipedrive
    method: GET
    url: https://api.pipedrive.com/v1/users/me
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - data.name
      - data.email
    details_format: "user: {{.data.name}}"
    requires_secret: false

  posthog:
    name: PostHog
    method: GET
    url: https://app.posthog.com/api/users/@me/
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
      - first_name
    details_format: "user: {{.first_name}}"
    requires_secret: false

  postman:
    name: Postman
    method: GET
    url: https://api.getpostman.com/me
    headers:
      X-Api-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - user.username
      - user.email
    details_format: "user: {{.user.username}}"
    requires_secret: false

  postmark:
    name: Postmark
    method: GET
    url: https://api.postmarkapp.com/server
    headers:
      X-Postmark-Server-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - Name
      - ID
    details_format: "server: {{.Name}}"
    requires_secret: false

  pulumi:
    name: Pulumi
    method: GET
    url: https://api.pulumi.com/api/user
    headers:
      Authorization: "token {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - githubLogin
      - name
    details_format: "user: {{.githubLogin}}"
    requires_secret: false

  pushbullet:
    name: Pushbullet
    method: GET
    url: https://api.pushbullet.com/v2/users/me
    headers:
      Access-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
      - name
    details_format: "user: {{.name}}"
    requires_secret: false

  rabbitmq:
    name: RabbitMQ
    method: GET
    auth_type: basic
    auth_user: "{{.Username}}"
    auth_pass: "{{.Key}}"
    url: https://{{.Host}}:15672/api/whoami
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - name
    details_format: "user: {{.name}}"
    requires_secret: false

  razorpay:
    name: Razorpay
    method: GET
    auth_type: basic
    auth_user: "{{.Key}}"
    auth_pass: "{{.Secret}}"
    url: https://api.razorpay.com/v1/payments
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: true
    secret_name: secret

  recharge:
    name: Recharge
    method: GET
    url: https://api.rechargeapps.com/shop
    headers:
      X-Recharge-Access-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - shop.name
      - shop.email
    details_format: "shop: {{.shop.name}}"
    requires_secret: false

  sendgrid:
    name: SendGrid
    method: GET
    url: https://api.sendgrid.com/v3/scopes
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  sendinblue:
    name: SendinBlue
    method: GET
    url: https://api.sendinblue.com/v3/account
    headers:
      api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
      - firstName
      - lastName
    details_format: "user: {{.firstName}} {{.lastName}}"
    requires_secret: false

  sentry:
    name: Sentry
    method: GET
    url: https://sentry.io/api/0/
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  shodan:
    name: Shodan
    method: GET
    url: https://api.shodan.io/api-info?key={{.Key}}
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  shopify:
    name: Shopify
    method: GET
    url: https://{{.Shop}}.myshopify.com/admin/api/2024-01/shop.json
    headers:
      X-Shopify-Access-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - shop.name
      - shop.email
    details_format: "shop: {{.shop.name}}"
    requires_secret: false

  slack:
    name: Slack
    method: POST
    url: https://slack.com/api/auth.test
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - ok
      - user
      - team
    success_field: ok
    details_format: "user: {{.user}}"
    error_field: error
    requires_secret: false

  snyk:
    name: Snyk
    method: GET
    url: https://api.snyk.io/rest/self?version=2024-10-15
    headers:
      Authorization: "token {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - data.attributes.username
      - data.attributes.email
    details_format: "user: {{.data.attributes.username}}"
    requires_secret: false

  sonarcloud:
    name: SonarCloud
    method: GET
    url: https://sonarcloud.io/api/authentication/validate
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - valid
    requires_secret: false

  square:
    name: Square
    method: GET
    url: https://connect.squareup.com/v2/locations
    headers:
      Authorization: "Bearer {{.Key}}"
      Square-Version: "2024-10-17"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  stripe:
    name: Stripe
    method: GET
    url: https://api.stripe.com/v1/balance
    auth_type: basic
    auth_user: "{{.Key}}"
    auth_pass: ""
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  telegram:
    name: Telegram
    method: GET
    url: https://api.telegram.org/bot{{.Key}}/getMe
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - result.username
      - result.first_name
    success_field: ok
    details_format: "bot: {{.result.username}}"
    requires_secret: false

  telnyx:
    name: Telnyx
    method: GET
    url: https://api.telnyx.com/v2/phone_numbers
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  terraform:
    name: Terraform
    method: GET
    url: https://app.terraform.io/api/v2/account/details
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - data.attributes.username
      - data.attributes.email
    details_format: "user: {{.data.attributes.username}}"
    requires_secret: false

  trello:
    name: Trello
    method: GET
    url: https://api.trello.com/1/members/me?key={{.Key}}&token={{.Token}}
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - username
      - fullName
    details_format: "user: {{.username}}"
    requires_secret: true
    secret_name: token

  twilio:
    name: Twilio
    method: GET
    auth_type: basic
    auth_user: "{{.Key}}"
    auth_pass: "{{.Secret}}"
    url: https://api.twilio.com/2010-04-01/Accounts.json
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: true
    secret_name: secret

  twitter:
    name: Twitter
    method: GET
    url: https://api.twitter.com/2/users/me
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - data.username
      - data.name
    details_format: "user: {{.data.username}}"
    requires_secret: false

  typeform:
    name: Typeform
    method: GET
    url: https://api.typeform.com/me
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
      - alias
    details_format: "user: {{.alias}}"
    requires_secret: false

  yousign:
    name: Yousign
    method: GET
    url: https://api.yousign.com/v3/workspaces
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  zendesk:
    name: Zendesk
    method: GET
    url: https://{{.Subdomain}}.zendesk.com/api/v2/users/me.json
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - user.name
      - user.email
    details_format: "user: {{.user.name}}"
    requires_secret: false

  airtable:
    name: Airtable
    method: GET
    url: https://api.airtable.com/v0/meta/whoami
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - id
    details_format: "user: {{.id}}"
    requires_secret: false

  asana:
    name: Asana
    method: GET
    url: https://app.asana.com/api/1.0/users/me
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - data.name
      - data.email
    details_format: "user: {{.data.name}}"
    requires_secret: false

  cloudflare:
    name: Cloudflare
    method: GET
    url: https://api.cloudflare.com/client/v4/user/tokens/verify
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - result.status
    success_field: success
    requires_secret: false

  datadog:
    name: Datadog
    method: GET
    url: https://api.datadoghq.com/api/v1/validate
    headers:
      DD-API-KEY: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - valid
    requires_secret: false

  discord:
    name: Discord
    method: GET
    url: https://discord.com/api/v10/users/@me
    headers:
      Authorization: "Bot {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - username
      - id
    details_format: "bot: {{.username}}"
    requires_secret: false

  figma:
    name: Figma
    method: GET
    url: https://api.figma.com/v1/me
    headers:
      X-Figma-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
      - handle
    details_format: "user: {{.handle}}"
    requires_secret: false

  grafana:
    name: Grafana
    method: GET
    url: https://{{.Instance}}.grafana.net/api/org
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - name
    details_format: "org: {{.name}}"
    requires_secret: false

  heroku:
    name: Heroku
    method: GET
    url: https://api.heroku.com/account
    headers:
      Authorization: "Bearer {{.Key}}"
      Accept: "application/vnd.heroku+json; version=3"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
      - name
    details_format: "user: {{.email}}"
    requires_secret: false

  linear:
    name: Linear
    method: POST
    url: https://api.linear.app/graphql
    headers:
      Authorization: "{{.Key}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    requires_secret: false

  pagerduty:
    name: PagerDuty
    method: GET
    url: https://api.pagerduty.com/users/me
    headers:
      Authorization: "Token token={{.Key}}"
      Accept: "application/vnd.pagerduty+json;version=2"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - user.name
      - user.email
    details_format: "user: {{.user.name}}"
    requires_secret: false

  salesforce:
    name: Salesforce
    method: GET
    url: https://{{.Instance}}.salesforce.com/services/oauth2/userinfo
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - email
      - name
    details_format: "user: {{.name}}"
    requires_secret: false

  supabase:
    name: Supabase
    method: GET
    url: https://{{.ProjectRef}}.supabase.co/rest/v1/
    headers:
      apikey: "{{.Key}}"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    requires_secret: false

  1uphealth:
    name: 1upHealth
    method: GET
    url: https://api.1up.health/user-management/v1/user
    headers:
      client_id: "{{.ClientID}}"
      client_secret: "{{.ClientSecret}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: json
    response_fields:
      - id
      - email
    details_format: "user: {{.email}}"
    requires_secret: true
    secret_name: client_secret

  15five:
    name: "15Five"
    method: "GET"
    url: "https://api.15five.com/api/public/hello"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  8x8:
    name: "8x8"
    method: "GET"
    url: "https://sms.8x8.com/api/v1/accounts/{{.Account_ID}}/prices"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  99designs:
    name: "99designs"
    method: "GET"
    url: "https://api.99designs.com/resources/v1/designers"
    headers:
      Api-Key-Id: "{{.Key}}"
      Api-Key-Secret: "{{.API_Secret}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  api2cart:
    name: "API2Cart"
    method: "GET"
    url: "https://api.api2cart.com/v1.1/account.cart.list.json?params=force_all"
    headers:
      x-api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apilayer:
    name: "APILayer"
    method: "GET"
    url: "https://apilayer.net/api/check?access_key={{.Access_Key}}&email={{.Email_Address}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apimatic:
    name: "APIMatic"
    method: "GET"
    url: "https://api.apimatic.io/transformations"
    headers:
      Authorization: "X-Auth-Key {{.API_KEY}}"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apitemplate:
    name: "APITemplate"
    method: "GET"
    url: "https://api.apitemplate.io/v1/list-templates"
    headers:
      X-API-KEY: "{{.API_key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apimetrics:
    name: "APImetrics"
    method: "GET"
    url: "https://client.apimetrics.io/api/2/calls/?_token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  att:
    name: "AT&T"
    method: "GET"
    url: "https://otx.alienvault.com/api/v1/users/me"
    headers:
      X-OTX-API-KEY: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abstractapiavatars:
    name: "Abstract API - avatars"
    method: "GET"
    url: "https://avatars.abstractapi.com/v1/?api_key={{.Key}}&name={{.Name}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abstractapicompanyenrichment:
    name: "Abstract API - companyenrichment"
    method: "GET"
    url: "https://companyenrichment.abstractapi.com/v1/?api_key={{.Key}}&domain={{.Domain_Name}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abstractapiemailvalidation:
    name: "Abstract API - emailvalidation"
    method: "GET"
    url: "https://emailvalidation.abstractapi.com/v1/?api_key={{.Key}}&email={{.Email}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abstractapiexchangerates:
    name: "Abstract API - exchange-rates"
    method: "GET"
    url: "https://exchange-rates.abstractapi.com/v1/live/?api_key={{.Key}}&base=USD"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abstractapiholidays:
    name: "Abstract API - holidays"
    method: "GET"
    url: "https://holidays.abstractapi.com/v1/?api_key={{.Key}}&country=GB&year=2021&month=1&day=25"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abstractapiimages:
    name: "Abstract API - images"
    method: "POST"
    url: "https://images.abstractapi.com/v1/url/"
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abstractapiipgeolocation:
    name: "Abstract API - ipgeolocation"
    method: "GET"
    url: "https://ipgeolocation.abstractapi.com/v1/?api_key={{.Key}}&ip_address={{.IP_Address}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abstractapiphonevalidation:
    name: "Abstract API - phonevalidation"
    method: "GET"
    url: "https://phonevalidation.abstractapi.com/v1/?api_key={{.Key}}&number={{.Number}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abstractapiscrape:
    name: "Abstract API - scrape"
    method: "GET"
    url: "https://scrape.abstractapi.com/v1/?api_key={{.Key}}&url={{.URL}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abstractapitimezone:
    name: "Abstract API - timezone"
    method: "GET"
    url: "https://timezone.abstractapi.com/v1/current_time/?api_key={{.Key}}&location={{.Loccation}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abstractapivat:
    name: "Abstract API- vat"
    method: "GET"
    url: "https://vat.abstractapi.com/v1/?api_key={{.Key}}&vat_number={{.Vat_Number}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abuseipdb:
    name: "AbuseIPDB"
    method: "GET"
    url: "https://api.abuseipdb.com/api/v2/check?ipAddress=118.25.6.39&maxAgeInDays=90&verbose"
    headers:
      Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  abyssale:
    name: "Abyssale"
    method: "GET"
    url: "https://api.abyssale.com/templates"
    headers:
      x-api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  accela:
    name: "Accela"
    method: "GET"
    url: "https://api.accela.com/v3/users/me?lang=en"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  accuweather:
    name: "AccuWeather"
    method: "GET"
    url: "http://dataservice.accuweather.com/locations/v1/adminareas/countryCode?apikey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  acquia:
    name: "Acquia"
    method: "POST"
    url: "https://accounts.acquia.com/api/auth/oauth/token"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  adroll:
    name: "AdRoll"
    method: "GET"
    url: "https://services.adroll.com/api/v1/organization/get_advertisables_paginated?apikey={{.API_KEY}}"
    headers:
      Authorization: "Token {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  adafruit:
    name: "AdaFruit"
    method: "GET"
    url: "https://io.adafruit.com/api/v2/{{.username}}/feeds?x-aio-key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  adafruitindustries:
    name: "Adafruit Industries,"
    method: "GET"
    url: "https://io.adafruit.com/api/v2/ladybugtest/feeds/?x-aio-key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  addepar:
    name: "Addepar"
    method: "GET"
    url: "https://{{.Firm_ID}}.addepar.com/api/v1/users"
    headers:
      accept: "application/vnd.api+json"
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  adobe:
    name: "Adobe"
    method: "GET"
    url: "https://stock.adobe.io/Rest/Media/1/Search/Files?locale=en_US%2526search_parameters%255Bwords%255D=kittens"
    headers:
      x-api-key: "{{.API_KEY}}"
      x-product: "{{.Product_ID}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  adzuna:
    name: "Adzuna"
    method: "GET"
    url: "https://api.adzuna.com/jobs/us/top_companies?app_id={{.APP_ID}}&app_key={{.APP_Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  aeroworkflow:
    name: "Aero Workflow"
    method: "GET"
    url: "https://api.aeroworkflow.com/api/{{.Account_Id}}/v1/TeamMembers"
    headers:
      apikey: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  affirm:
    name: "Affirm"
    method: "POST"
    url: "https://api.affirm.com/api/v1/transactions/"
    headers:
      Authorization: "Basic {{.Key}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  aha:
    name: "Aha!"
    method: "GET"
    url: "https://{{.Custom_Domain}}.aha.io/api/v1/users"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  airvisual:
    name: "AirVisual"
    method: "GET"
    url: "http://api.airvisual.com/v2/countries?key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  airbnb:
    name: "Airbnb"
    method: "GET"
    url: "https://airbnb19.p.rapidapi.com/api/v1/test"
    headers:
      X-RapidAPI-Host: "airbnb19.p.rapidapi.com"
      X-RapidAPI-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  airship:
    name: "Airship"
    method: "GET"
    url: "https://go.urbanairship.com/api/schedules"
    headers:
      Accept: "application/vnd.urbanairship+json; version=3"
      Authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  aiven:
    name: "Aiven"
    method: "GET"
    url: "https://api.aiven.io/v1/project"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  alation:
    name: "Alation"
    method: "GET"
    url: "https://{{.Instance_URL}}/integration/v1/userinfo/"
    headers:
      TOKEN: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  alchemy:
    name: "Alchemy"
    method: "GET"
    url: "https://eth-mainnet.g.alchemy.com/nft/v3/{{.API_KEY}}/getFloorPrice?contractAddress=0xe785E82358879F061BC3dcAC6f0444462D4b5330&collectionSlug=boredapeyachtclub"
    headers:
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  alconost:
    name: "Alconost"
    method: "GET"
    url: "https://nitro.alconost.com/api/v1/account"
    headers:
      Content-Type: "application/json"
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  aletheia:
    name: "Aletheia"
    method: "GET"
    url: "https://api.aletheiaapi.com/v2/consumption"
    headers:
      key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  allsportdb:
    name: "AllSportDB"
    method: "GET"
    url: "https://api.allsportdb.com/v3/sports?id=1&season=summer"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  allsportsapi:
    name: "AllSportsAPI"
    method: "GET"
    url: "https://apiv2.allsportsapi.com/football/?met=Countries&APIkey={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  alloy:
    name: "Alloy"
    method: "GET"
    url: "https://api.uk.alloyapp.io/api/session/me?token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  aloft:
    name: "Aloft"
    method: "GET"
    url: "https://api.aloft.ai/v1/accounts"
    headers:
      accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  amadeus:
    name: "Amadeus"
    method: "POST"
    url: "https://{{.APP_Name}}.api.amadeus.com/v1/security/oauth2/token"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ambee:
    name: "Ambee"
    method: "GET"
    url: "https://api.ambeedata.com/latest/by-lat-lng?lat=12&lng=77"
    headers:
      x-api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  amdoren:
    name: "Amdoren"
    method: "GET"
    url: "https://www.amdoren.com/api/currency.php?api_key={{.Key}}&from=USD&to=EUR"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  amplitude:
    name: "Amplitude"
    method: "GET"
    url: "https://amplitude.com/api/3/cohorts"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  angellist:
    name: "AngelList"
    method: "GET"
    url: "https://api.angel.co/1/me"
    headers:
      accept: "application.json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apactaas:
    name: "Apacta A/S"
    method: "GET"
    url: "https://app.apacta.com/api/v1/time_entries?api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apiflash:
    name: "ApiFlash"
    method: "GET"
    url: "https://api.apiflash.com/v1/urltoimage/quota?access_key={{.Access_Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apideck:
    name: "Apideck"
    method: "GET"
    url: "https://api.apideck.com/accounting/companies/{{.COMPANY_ID}}"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apideckcustomapi:
    name: "Apideck - Custom API"
    method: "GET"
    url: "https://unify.apideck.com/accounting/company-info"
    headers:
      Authorization: "Bearer {{.Key}}"
      x-apideck-consumer-id: "{{.Consumer_ID}}"
      x-apideck-app-id: "{{.APP_ID}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apify:
    name: "Apify"
    method: "GET"
    url: "https://api.apify.com/v2/users/me?token={{.API_key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apollo:
    name: "Apollo"
    method: "GET"
    url: "https://api.apollo.io/v1/auth/health?api_key={{.API_KEY}}"
    headers:
      Content-Type: "application/json"
      Cache-Control: "no-cache"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apolloio:
    name: "Apollo.io"
    method: "GET"
    url: "https://api.apollo.io/v1/account_stages?api_key={{.Key}}"
    headers:
      Cache-Control: "no-cache"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  appsynergybyparasql:
    name: "AppSynergy by ParaSQL"
    method: "GET"
    url: "https://www.appsynergy.com/api?action=WEB_REQUEST&apiKey={{.YOUR_API_KEY}}&OptParam=SomeValue"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  appcenter:
    name: "App Center"
    method: "GET"
    url: "https://api.appcenter.ms/v0.1/apps"
    headers:
      Content-Type: "application/json"
      X-Api-Token: "{{.api_token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  appcues:
    name: "Appcues"
    method: "GET"
    url: "https://api.appcues.com/v2/accounts/202990/jobs"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  appodeal:
    name: "Appodeal"
    method: "GET"
    url: "https://api-services.appodeal.com/api/v2/stats_api?api_key={{.Key}}&user_id={{.User_ID}}&date_from=2019-05-13&date_to=2019-05-19&detalisation%5B%5D=date"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  appointedd:
    name: "Appointedd"
    method: "GET"
    url: "https://api.appointedd.com/v1/services/categories?limit=10"
    headers:
      X-API-KEY: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apptimize:
    name: "Apptimize"
    method: "GET"
    url: "https://api.apptimize.com/v1/users/{{.User_ID}}/variant-info"
    headers:
      ApptimizeApiToken: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  apptivo:
    name: "Apptivo"
    method: "GET"
    url: "https://api.apptivo.com/app/dao/v6/customers?a=getConfigData&apiKey={{.Key}}&accessKey={{.Access_Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  aptly:
    name: "Aptly"
    method: "GET"
    url: "https://app.getaptly.com/api/users?x-token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  artsy:
    name: "Artsy"
    method: "POST"
    url: "https://api.artsy.net/api/tokens/xapp_token"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  assemblyai:
    name: "AssemblyAI"
    method: "GET"
    url: "https://api.assemblyai.com/v2/transcript?limit=200&status=completed"
    headers:
      authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  assetlayer:
    name: "Asset Layer"
    method: "GET"
    url: "https://api.assetlayer.com/api/v1/app/info?appId={{.APII_ID}}"
    headers:
      appsecret: "{{.APP_Secret}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  atera:
    name: "Atera"
    method: "GET"
    url: "https://app.atera.com/api/v3/agents"
    headers:
      X-API-KEY: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  atlassian:
    name: "Atlassian"
    method: "GET"
    url: "https://api.opsgenie.com/v2/account"
    headers:
      Authorization: "GenieKey {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  audioscrobbler:
    name: "AudioScrobbler"
    method: "GET"
    url: "https://ws.audioscrobbler.com/2.0/?method=artist.getSimilar&api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  auth0:
    name: "Auth0"
    method: "GET"
    url: "https://{{.Tenant_name}}.auth0.com/api/v2/clients"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  autodesk:
    name: "Autodesk"
    method: "GET"
    url: "https://developer.api.autodesk.com/construction/buildingconnected/v2/users"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  autodeskauthentication:
    name: "Autodesk - Authentication"
    method: "POST"
    url: "https://developer.api.autodesk.com/authentication/v2/token"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Accept: "application/json"
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  avaza:
    name: "Avaza"
    method: "GET"
    url: "https://api.avaza.com/api/Account"
    headers:
      Authorization: "Bearer {{.API_Secret}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  aviationstack:
    name: "Aviationstack"
    method: "GET"
    url: "https://api.aviationstack.com/v1/flights?access_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  axonaut:
    name: "Axonaut"
    method: "GET"
    url: "https://axonaut.com/api/v2/me"
    headers:
      userApiKey: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ayrshare:
    name: "Ayrshare"
    method: "GET"
    url: "https://app.ayrshare.com/api/user"
    headers:
      Authorization: "Bearer {{.API_key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  azavea:
    name: "Azavea"
    method: "GET"
    url: "https://cicero.azavea.com/v3.1/account/credits_remaining?key={{.API_KEY}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  azuremapsapikey:
    name: "Azure Maps - API Key"
    method: "GET"
    url: "https://atlas.microsoft.com/search/address/json?api-version=1.0&query={{.QUERY}}&subscription-key={{.AZURE_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  brevo:
    name: "B-Revo"
    method: "GET"
    url: "https://api.brevo.com/v3/organization/invited/users"
    headers:
      accept: "application/json"
      api-key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bannerbear:
    name: "Bannerbear"
    method: "GET"
    url: "https://api.bannerbear.com/v2/projects"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  baremetrics:
    name: "Baremetrics"
    method: "GET"
    url: "https://api.baremetrics.com/v1/users"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bazaarvoice:
    name: "Bazaarvoice"
    method: "GET"
    url: "https://which-cpv-api.bazaarvoice.com/clientInfo?conversationspasskey={{.Passkey}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  benchmarkemail:
    name: "Benchmark Email"
    method: "GET"
    url: "https://clientapi.benchmarkemail.com/Client/Setting"
    headers:
      AuthToken: "{{.Auth_Token}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  besttime:
    name: "Best-Time"
    method: "GET"
    url: "https://besttime.app/api/v1/keys/{{.Private_Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  betterstack:
    name: "Better Stack"
    method: "GET"
    url: "https://uptime.betterstack.com/api/v2/monitors"
    headers:
      Authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bhagavadgitaapi:
    name: "Bhagavad Gita API"
    method: "GET"
    url: "https://bhagavadgitaapi.in/slok?api_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bibleapi:
    name: "Bible API"
    method: "GET"
    url: "https://api.scripture.api.bible/v1/bibles/a6aee10bb058511c-02/verses/JHN.3.16?fums-version=3"
    headers:
      api-key: "{{.YOUR_API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bigcommerce:
    name: "BigCommerce"
    method: "GET"
    url: "https://api.bigcommerce.com/stores/{{.Store_ID}}/v3/settings/store/profile"
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      X-Auth-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  binance:
    name: "Binance"
    method: "GET"
    url: "https://api.binance.com/api/v3/account"
    headers:
      X-MBX-APIKEY: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  binaryedge:
    name: "BinaryEdge"
    method: "GET"
    url: "https://api.binaryedge.io/v2/user/subscription"
    headers:
      X-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  binti:
    name: "Binti"
    method: "GET"
    url: "https://family.binti.com/api/v1/user_agency_profiles?tz=utc"
    headers:
      accept: "application/json"
      Authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bitcoinaverage:
    name: "BitcoinAverage"
    method: "GET"
    url: "https://apiv2.bitcoinaverage.com/exchanges/ticker/bitstamp"
    headers:
      x-ba-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bitquery:
    name: "Bitquery"
    method: "POST"
    url: "https://graphql.bitquery.io/"
    headers:
      X-API-KEY: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bitrise:
    name: "Bitrise"
    method: "GET"
    url: "https://api.bitrise.io/v0.1/me"
    headers:
      Authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  blablacar:
    name: "BlaBlaCar"
    method: "GET"
    url: "https://bus-api.blablacar.com/v3/fares?date=2015-04-16&origin_id=12"
    headers:
      Authorization: "Token {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  blazemeter:
    name: "BlazeMeter"
    method: "GET"
    url: "https://a.blazemeter.com/api/v4/user"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  blitapp:
    name: "BlitAPP"
    method: "GET"
    url: "https://blitapp.com/api/apps/all?key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bloc:
    name: "Bloc"
    method: "GET"
    url: "https://api.blochq.io/v1/accounts"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Public_Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  block:
    name: "Block"
    method: "GET"
    url: "https://block.io/api/v2/get_balance/?api_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  blockfrostio:
    name: "Blockfrost.io"
    method: "GET"
    url: "https://cardano-mainnet.blockfrost.io/api/v0/"
    headers:
      project_id: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bolt:
    name: "Bolt"
    method: "GET"
    url: "https://api.bolt.com/v1/account"
    headers:
      Authorization: "bearer {{.TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  box:
    name: "Box"
    method: "GET"
    url: "https://api.box.com/2.0/collections"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  branch:
    name: "Branch"
    method: "GET"
    url: "https://api2.branch.io/v1/app/{{.Key}}?branch_secret={{.API_Secret}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  brandfetch:
    name: "Brandfetch"
    method: "GET"
    url: "https://api.brandfetch.io/v2/brands/brandfetch.com"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  breezometer:
    name: "BreezoMeter"
    method: "GET"
    url: "https://api.breezometer.com/air-quality/v2/current-conditions?lat=48.857456&lon=2.354611&key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  brevo1:
    name: "Brevo"
    method: "GET"
    url: "https://api.brevo.com/v3/account"
    headers:
      accept: "application/json"
      api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  brex:
    name: "Brex"
    method: "GET"
    url: "https://platform.brexapis.com/v2/users/{{.User_ID}}"
    headers:
      Authorization: "Bearer {{.Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  brilliant:
    name: "Brilliant"
    method: "GET"
    url: "https://api.brilliantmade.com/v3/orders?page=1&per=5"
    headers:
      Authorization: "{{.Auth_key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  browserstack:
    name: "BrowserStack"
    method: "GET"
    url: "https://api.browserstack.com/automate/plan.json"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  browshot:
    name: "Browshot"
    method: "GET"
    url: "https://api.browshot.com/api/v1/simple?url={{.URL}}&key={{.Key}}&width=640&size=page"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bscscan:
    name: "BscScan"
    method: "GET"
    url: "https://api.bscscan.com/api?module=account&action=balance&address={{.Crypto_Address}}&apikey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  buddyns:
    name: "BuddyNS"
    method: "GET"
    url: "https://www.buddyns.com/api/v2/user/"
    headers:
      Authorization: "Token {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  buddynscom:
    name: "BuddyNS.com"
    method: "GET"
    url: "https://www.buddyns.com/api/v2/zone/"
    headers:
      Content-Type: "application/json"
      Authorization: "Token {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  budibase:
    name: "Budibase"
    method: "GET"
    url: "https://budibase.app/api/public/v1/metrics"
    headers:
      accept: "text/plain"
      x-budibase-api-key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bugherd:
    name: "BugHerd"
    method: "GET"
    url: "https://www.bugherd.com/api_v2/users.json"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  bugsnag:
    name: "Bugsnag"
    method: "GET"
    url: "https://api.bugsnag.com/user/organizations"
    headers:
      Authorization: "token {{.Key}}"
      X-Version: "2"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  buildkiteaccesstoken:
    name: "Buildkite - Access-Token"
    method: "GET"
    url: "https://api.buildkite.com/v2/access-token"
    headers:
      Authorization: "Bearer {{.ACCESS_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  buildkiteuser:
    name: "Buildkite - User"
    method: "GET"
    url: "https://api.buildkite.com/v2/user"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bulksms:
    name: "Bulk SMS"
    method: "GET"
    url: "https://api.bulksms.com/v1/messages"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  buttercms:
    name: "ButterCMS"
    method: "GET"
    url: "https://api.buttercms.com/v2/posts/?auth_token={{.api_token}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  buttercms1:
    name: "Butter CMS"
    method: "GET"
    url: "https://api.buttercms.com/v2/posts/?auth_token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  chec:
    name: "CHEC"
    method: "GET"
    url: "https://api.chec.io/v1/products"
    headers:
      X-Authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  companyhub:
    name: "COMPANY HUB"
    method: "GET"
    url: "https://api.companyhub.com/v1/me"
    headers:
      Authorization: "{{.Subdomain}}  {{.API_key}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  caflou:
    name: "Caflou"
    method: "GET"
    url: "https://app.caflou.com/api/v1/accounts"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  calendarific:
    name: "Calendarific"
    method: "GET"
    url: "https://calendarific.com/api/v2/holidays?&api_key={{.Key}}&country=US&year=2023"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  calendly:
    name: "Calendly"
    method: "GET"
    url: "https://calendly.com/api/v1/users/me"
    headers:
      Authorization: "Bearer {{.Personal_Access_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  campayn:
    name: "Campayn"
    method: "POST"
    url: "https://campayn.com/api/v1/lists/123/contacts.json"
    headers:
      Content-Type: "application/json"
      Authorization: "TRUEREST apikey={{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  canny:
    name: "Canny"
    method: "GET"
    url: "https://canny.io/api/v1/users/list?apiKey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  capitalonesandboxclientidsecret:
    name: "Capital One - Sandbox - Client_ID/Secret"
    method: "POST"
    url: "https://api-sandbox.capitalone.com/oauth2/token"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  capsulecrm:
    name: "Capsule CRM"
    method: "GET"
    url: "https://api.capsulecrm.com/api/v2/users"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  captaindata:
    name: "Captain Data"
    method: "GET"
    url: "https://api.captaindata.co/v3/users"
    headers:
      Authorization: "x-api-key {{.API_KEY}}"
      x-project-id: "{{.Project_ID}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  carboninterface:
    name: "Carbon Interface"
    method: "GET"
    url: "https://www.carboninterface.com/api/v1/auth"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  carta:
    name: "Carta"
    method: "GET"
    url: "https://api.playground.carta.team/v1alpha1/user"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  caspioclientidsecret:
    name: "Caspio - Client_ID/Secret"
    method: "POST"
    url: "https://{{.Your_Caspio_Account}}.caspio.com/oauth/token"
    headers:
      Content-Type: "text/plain"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  castle:
    name: "Castle"
    method: "GET"
    url: "https://api.castle.io/v1/lists"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  censys:
    name: "Censys"
    method: "GET"
    url: "https://search.censys.io/api/v1/account"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  chartmogul:
    name: "ChartMogul"
    method: "GET"
    url: "https://api.chartmogul.com/v1/data_sources"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  chatbot:
    name: "ChatBot"
    method: "GET"
    url: "https://api.chatbot.com/users"
    headers:
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  chatfuel:
    name: "Chatfuel"
    method: "GET"
    url: "https://dashboard.chatfuel.com/api/bots"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  checkly:
    name: "Checkly"
    method: "GET"
    url: "https://api.checklyhq.com/v1/accounts"
    headers:
      X-Checkly-Account: "{{.Account_ID}}"
      Authorization: "Bearer {{.my_token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  checkr:
    name: "Checkr"
    method: "GET"
    url: "https://api.checkr.com/v1/account"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  cicero:
    name: "Cicero"
    method: "GET"
    url: "https://cicero.azavea.com/v3.1/official?lat=39.662&lon=-75.566&district_type=NATIONAL_LOWER&format=json&key={{.API_key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  circle:
    name: "Circle"
    method: "GET"
    url: "https://app.circle.so/api/v1/communities"
    headers:
      Authorization: "Token {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cisco:
    name: "Cisco"
    method: "GET"
    url: "https://api.meraki.com/api/v1/organizations"
    headers:
      X-Cisco-Meraki-API-Key: "{{.Key}}"
      Content-Type: "application/json"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  clarifai:
    name: "Clarifai"
    method: "GET"
    url: "https://api.clarifai.com/v2/users/"
    headers:
      Authorization: "Key {{.Key}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  clickup:
    name: "ClickUp"
    method: "GET"
    url: "https://api.clickup.com/api/v2/user"
    headers:
      Authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cliengo:
    name: "Cliengo"
    method: "GET"
    url: "https://api.cliengo.com/1.0/account?api_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  climatiq:
    name: "Climatiq"
    method: "GET"
    url: "https://beta3.api.climatiq.io/search?query=light+duty+trucks&year=2021"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  clinchpad:
    name: "ClinchPad"
    method: "GET"
    url: "https://www.clinchpad.com/api/v1/users"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  clockify:
    name: "Clockify"
    method: "GET"
    url: "https://api.clockify.me/api/v1/user"
    headers:
      X-Api-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  close:
    name: "Close"
    method: "GET"
    url: "https://api.close.com/api/v1/me/"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  cloudbees:
    name: "CloudBees"
    method: "GET"
    url: "https://x-api.rollout.io/public-api/applications"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cloudconvertme:
    name: "CloudConvert - Me"
    method: "GET"
    url: "https://api.cloudconvert.com/v2/users/me"
    headers:
      Authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cloudconverttasks:
    name: "CloudConvert - Tasks"
    method: "GET"
    url: "https://api.cloudconvert.com/v2/tasks"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cloudelements:
    name: "Cloud Elements"
    method: "GET"
    url: "https://staging.cloud-elements.com/elements/api-v2/accounts"
    headers:
      Authorization: "User {{.User_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cloudmersive:
    name: "Cloudmersive"
    method: "POST"
    url: "https://api.cloudmersive.com/convert/edit/docx/create/blank"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Apikey: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cloudsmith:
    name: "Cloudsmith"
    method: "GET"
    url: "https://api.cloudsmith.io/v1/user/self/"
    headers:
      X-Api-Key: "{{.Api_key}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cloverly:
    name: "Cloverly"
    method: "GET"
    url: "https://api-prod-no-cert.cloverly.com/2021-10/account"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cloze:
    name: "Cloze"
    method: "GET"
    url: "https://api.cloze.com/v1/profile?user={{.User_Email}}&api_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  clustdoc:
    name: "Clustdoc"
    method: "GET"
    url: "https://app.clustdoc.com/api/templates?api_token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  coda:
    name: "Coda"
    method: "GET"
    url: "https://coda.io/apis/v1/whoami"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  codacy:
    name: "Codacy"
    method: "GET"
    url: "https://app.codacy.com/api/v3/user"
    headers:
      api-token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  codeclimate:
    name: "Code Climate"
    method: "GET"
    url: "https://api.codeclimate.com/v1/user"
    headers:
      Authorization: "Token token={{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  codeclimatewithaccept:
    name: "Code Climate - With Accept"
    method: "GET"
    url: "https://api.codeclimate.com/v1/user"
    headers:
      Accept: "application/vnd.api+json"
      Authorization: "Token token={{.TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  codestats:
    name: "Code::Stats"
    method: "POST"
    url: "https://codestats.net/api/my/pulses"
    headers:
      X-API-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  codemagic:
    name: "Codemagic"
    method: "GET"
    url: "https://api.codemagic.io/apps"
    headers:
      x-auth-token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  codequiry:
    name: "Codequiry"
    method: "POST"
    url: "https://codequiry.com/api/v1/account"
    headers:
      apikey: "{{.API_key}} "
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  codility:
    name: "Codility"
    method: "GET"
    url: "https://codility.com/api/account/credit-level/"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  codingame:
    name: "CodinGame"
    method: "GET"
    url: "https://www.codingame.com/assessment/api/v1.1/campaigns"
    headers:
      API-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  coinapi:
    name: "CoinAPI"
    method: "GET"
    url: "https://rest.coinapi.io/v1/exchanges"
    headers:
      X-CoinAPI-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  coinlayer:
    name: "CoinLayer"
    method: "GET"
    url: "https://api.coinlayer.com/live?access_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  coinmarketcap:
    name: "CoinMarketCap"
    method: "GET"
    url: "https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest"
    headers:
      X-CMC_PRO_API_KEY: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  coinlib:
    name: "Coinlib"
    method: "GET"
    url: "https://coinlib.io/api/v1/global?key={{.Key}}&pref=EUR"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  coinranking:
    name: "Coinranking"
    method: "GET"
    url: "https://api.coinranking.com/v2/exchanges"
    headers:
      x-access-token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  column:
    name: "Column"
    method: "GET"
    url: "https://api.column.com/transfers"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  comma:
    name: "Comma"
    method: "GET"
    url: "https://api.commadotai.com/v1/me/"
    headers:
      Authorization: "JWT {{.JWT_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  commercelayer:
    name: "Commerce Layer"
    method: "GET"
    url: "https://abdo-2.commercelayer.io/api/events/"
    headers:
      Accept: "application/vnd.api+json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  computerrepairshopsoftware:
    name: "Computer Repair Shop Software"
    method: "GET"
    url: "https://{{.Your}}-Subdomain.repairshopr.com/api/v1/me"
    headers:
      accept: "application/json"
      Authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  confluent:
    name: "Confluent"
    method: "GET"
    url: "https://api.confluent.cloud/iam/v2/users"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  contentful:
    name: "Contentful"
    method: "GET"
    url: "https://cdn.contentful.com/spaces/{{.SPace_ID}}/entries?access_token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  conversiontools:
    name: "Conversion Tools"
    method: "GET"
    url: "https://api.conversiontools.io/v1/tasks"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  convertapi:
    name: "ConvertAPI"
    method: "POST"
    url: "https://v2.convertapi.com/token/create?Secret={{.API_Secret}}&RequestCount=3&Lifetime=10000&Count=2"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  convertkit:
    name: "ConvertKit"
    method: "GET"
    url: "https://api.convertkit.com/v3/account?api_secret={{.your_secret_api_key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cooperhewittlabs:
    name: "Cooper Hewitt Labs"
    method: "GET"
    url: "https://api.collection.cooperhewitt.org/rest/?method=api.spec.formats&access_token=ACCESS_TOKEN"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  copper:
    name: "Copper"
    method: "GET"
    url: "https://api.copper.com/developer_api/v1/account"
    headers:
      X-PW-AccessToken: "{{.Key}}"
      X-PW-Application: "developer_api"
      X-PW-UserEmail: "{{.User_Email}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  countrylayer:
    name: "Country Layer"
    method: "GET"
    url: "http://api.countrylayer.com/v2/all?access_key={{.Access_Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  courier:
    name: "Courier"
    method: "GET"
    url: "https://api.courier.com/lists"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  covalent:
    name: "Covalent"
    method: "GET"
    url: "https://api.covalenthq.com/v1/3/address/balances_v2/?&key=YOUR_API_KEY"
    headers:
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  coveralls:
    name: "Coveralls"
    method: "GET"
    url: "https://coveralls.io/api/repos/github/secretscanner02/scanner"
    headers:
      Authorization: "token {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cradlepoint:
    name: "Cradlepoint"
    method: "GET"
    url: "https://api.cradlepointecm.com/api/v3/beta/users"
    headers:
      Authorization: "Bearer {{.Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  craftmypdf:
    name: "CraftMyPDF"
    method: "GET"
    url: "https://api.craftmypdf.com/v1/list-transactions?limit=300&offset=0"
    headers:
      X-API-KEY: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  criteo:
    name: "Criteo"
    method: "GET"
    url: "https://api.criteo.com/2023-10/advertisers/me"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  crowdin:
    name: "Crowdin"
    method: "GET"
    url: "https://api.crowdin.com/api/v2/user"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  crunchbase:
    name: "Crunchbase"
    method: "GET"
    url: "https://api.crunchbase.com/api/v4/entities/organizations/crunchbase?user_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  cryptocompare:
    name: "CryptoCompare"
    method: "GET"
    url: "https://min-api.cryptocompare.com/data/blockchain/list?api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  currencybeacon:
    name: "CurrencyBeacon"
    method: "GET"
    url: "https://api.currencybeacon.com/v1/latest?api_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  currencyscoop:
    name: "CurrencyScoop"
    method: "GET"
    url: "https://api.currencyscoop.com/v1/historical?api_key={{.Key}}&date=2022-01-01"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  currencycloud:
    name: "Currencycloud"
    method: "POST"
    url: "https://devapi.currencycloud.com/v2/authenticate/api"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  currencylayer:
    name: "Currencylayer"
    method: "GET"
    url: "http://api.currencylayer.com/live?access_key={{.Access_Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  currentsapi:
    name: "Currents API"
    method: "GET"
    url: "https://api.currentsapi.services/v1/search?apiKey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  customerguru:
    name: "Customer.guru"
    method: "GET"
    url: "https://customer.guru/export/customers?api_secret={{.API_Secret}}&api_token={{.Key}}&page=0&per_page=50"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  customerio:
    name: "Customer.io"
    method: "GET"
    url: "https://track.customer.io/api/v1/accounts/region"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  d7networksget:
    name: "D7 Networks - Get"
    method: "GET"
    url: "https://api.d7networks.com/messages/v1/balance"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  d7networkspost:
    name: "D7 Networks - Post"
    method: "POST"
    url: "https://api.d7networks.com/auth/v1/login/application"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dnscheck:
    name: "DNS Check"
    method: "GET"
    url: "https://www.dnscheck.co/api/v1/groups/{{.GROUP_ID}}?api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dandelion:
    name: "Dandelion"
    method: "GET"
    url: "https://api.dandelion.eu/datatxt/nex/v1/?text=The%20doctor%20says%20an%20apple%20is%20better%20than%20an%20orange&include=types%2Cabstract%2Ccategories&token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  datastax:
    name: "DataStax"
    method: "GET"
    url: "https://api.astra.datastax.com/v2/organizations/users"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ddownload:
    name: "Ddownload"
    method: "GET"
    url: "https://api-v2.ddownload.com/api/account/info?key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  deepgram:
    name: "Deepgram"
    method: "GET"
    url: "https://api.deepgram.com/v1/projects"
    headers:
      Authorization: "Token {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  delighted:
    name: "Delighted"
    method: "GET"
    url: "https://api.delighted.com/v1/people.json"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  demandbase:
    name: "Demandbase"
    method: "GET"
    url: "https://gateway.demandbase.com/api/v1/accounts/fields"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  demio:
    name: "Demio"
    method: "GET"
    url: "https://my.demio.com/api/v1/events?type=upcoming"
    headers:
      Api-Key: "{{.Key}}"
      Api-Secret: "{{.API_Secret}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  deputy:
    name: "Deputy"
    method: "GET"
    url: "https://{{.Install}}.{{.Geo}}.deputy.com/api/v1/resource/Company"
    headers:
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  descript:
    name: "Descript"
    method: "GET"
    url: "https://descriptapi.com/v1/overdub/voices"
    headers:
      authorization: "Bearer {{.Access_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  detectlanguage:
    name: "Detect Language"
    method: "GET"
    url: "https://ws.detectlanguage.com/0.2/user/status"
    headers:
      Authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  detectlanguageapi:
    name: "Detect Language API"
    method: "GET"
    url: "https://ws.detectlanguage.com/0.2/user/status"
    headers:
      Authorization: "Bearer {{.YOUR_API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  detectify:
    name: "Detectify"
    method: "GET"
    url: "https://api.detectify.com/rest/v2/assets/"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  deviantartget:
    name: "DeviantArt - Get"
    method: "GET"
    url: "https://www.deviantart.com/api/v1/oauth2/placebo?access_token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  deviantartpost:
    name: "DeviantArt - Post"
    method: "POST"
    url: "https://www.deviantart.com/oauth2/token"
    headers:
      content-type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dialpad:
    name: "Dialpad"
    method: "GET"
    url: "https://dialpad.com/api/v2/company/"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  diffbot:
    name: "Diffbot"
    method: "GET"
    url: "https://api.diffbot.com/v3/crawl?token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  diggernaut:
    name: "Diggernaut"
    method: "GET"
    url: "https://www.diggernaut.com/api/sessions"
    headers:
      Authorization: "Token {{.API_key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  disqus:
    name: "Disqus"
    method: "GET"
    url: "https://disqus.com/api/3.0/users/details.json?access_token={{.Key}}&api_key={{.Key}}&api_secret={{.API_Secret}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ditto:
    name: "Ditto"
    method: "POST"
    url: "https://{{.APP_ID}}.cloud.ditto.live/api/v4/store/write"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  docparser:
    name: "Docparser"
    method: "GET"
    url: "https://api.docparser.com/v1/parsers"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  docsumo:
    name: "Docsumo"
    method: "GET"
    url: "https://app.docsumo.com/api/v1/eevee/apikey/limit/"
    headers:
      X-API-KEY: "{{.API_key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  documo:
    name: "Documo"
    method: "GET"
    url: "https://api.documo.com/api-keys"
    headers:
      Authorization: "Basic {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  domcop:
    name: "DomCop"
    method: "GET"
    url: "https://openpagerank.com/api/v1.0/getPageRank?domains[]={{.Domain}}"
    headers:
      API-OPR: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dowllasandbox:
    name: "Dowlla - Sandbox"
    method: "GET"
    url: "https://api-sandbox.dwolla.com/events"
    headers:
      Accept: "application/vnd.dwolla.v1.hal+json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dribbble:
    name: "Dribbble"
    method: "GET"
    url: "https://api.dribbble.com/v2/user?access_token={{.ACCESS_TOKEN}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dronedeploy:
    name: "DroneDeploy"
    method: "GET"
    url: "https://public-api.dronedeploy.com/v2/plans?api_key={{.api_key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dropbox:
    name: "Dropbox"
    method: "POST"
    url: "https://api.dropboxapi.com/2/users/get_current_account"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dropboxsign:
    name: "Dropbox Sign"
    method: "GET"
    url: "https://api.hellosign.com/v3/signature_request/list"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  duply:
    name: "Duply"
    method: "GET"
    url: "https://gen.duply.co/v1/generate-video/"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  dwolla:
    name: "Dwolla"
    method: "GET"
    url: "https://api-sandbox.dwolla.com/events"
    headers:
      Accept: "application/vnd.dwolla.v1.hal+json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dynalist:
    name: "Dynalist"
    method: "POST"
    url: "https://dynalist.io/api/v1/file/list"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dynata:
    name: "Dynata"
    method: "GET"
    url: "https://api.dynata.com/sample/v1/user"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dyspatch:
    name: "Dyspatch"
    method: "GET"
    url: "https://api.dyspatch.io/workspaces"
    headers:
      Authorization: "Bearer {{.API_key}}"
      Accept: "application/vnd.dyspatch.2023.03+json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  eosnationget:
    name: "EOS Nation - Get"
    method: "GET"
    url: "https://eos.dfuse.eosnation.io/v0/state/key_accounts?public_key={{.PUBLIC_KEY}}"
    headers:
      Authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  eosnationpost:
    name: "EOS Nation - Post"
    method: "POST"
    url: "https://auth.eosnation.io/v1/auth/issue"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  eagleeyenetworks:
    name: "Eagle Eye Networks"
    method: "GET"
    url: "https://eagleeyenetworks.com/api/v3.0/events?pageSize=100"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  easypost:
    name: "EasyPost"
    method: "GET"
    url: "https://api.easypost.com/v2/users"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  edamam:
    name: "Edamam"
    method: "GET"
    url: "https://api.edamam.com/api/recipes/v2?type=public&app_id={{.App_Id}}&app_key={{.App_Key}}"
    headers:
      Accept-Language: "en"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  edenai:
    name: "Eden AI"
    method: "GET"
    url: "https://api.edenai.run/v2/aiproducts/"
    headers:
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  elasticemail:
    name: "Elastic Email"
    method: "GET"
    url: "https://api.elasticemail.com/v4/events"
    headers:
      X-ElasticEmail-ApiKey: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  enablex:
    name: "EnableX"
    method: "GET"
    url: "https://api.enablex.io/video/v2/rooms"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  enigma:
    name: "Enigma"
    method: "POST"
    url: "https://api.enigma.com/businesses/match"
    headers:
      content-type: "application/json"
      x-api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  equinix:
    name: "Equinix,"
    method: "GET"
    url: "https://api.equinix.com/ecx/v3/port/userport"
    headers:
      content-type: "application/json"
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  erply:
    name: "Erply"
    method: "POST"
    url: "https://{{.Client_Code}}.erply.com/api/"
    headers:
      content-type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  etherscan:
    name: "Etherscan"
    method: "GET"
    url: "https://api.etherscan.io/api?module=account&action=balance&address={{.Address}}&tag=latest&apikey={{.YOUR_API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  etsy:
    name: "Etsy"
    method: "GET"
    url: "https://openapi.etsy.com/v2/listings/active?api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  europeana:
    name: "Europeana"
    method: "GET"
    url: "https://api.europeana.eu/record/v2/search.json?wskey={{.API_KEY}}&query=*&rows=0&profile=facets"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  everhour:
    name: "Everhour"
    method: "GET"
    url: "https://api.everhour.com/team/users"
    headers:
      Content-Type: "application/json"
      X-Api-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  exchangerateapi:
    name: "ExchangeRate-API"
    method: "GET"
    url: "https://v6.exchangerate-api.com/v6/latest/USD"
    headers:
      Accept: "application/vnd.exchangerateapi+json; version=3"
      Authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  exchangerate:
    name: "Exchange Rate"
    method: "GET"
    url: "https://v6.exchangerate-api.com/v6/{{.YOUR}}-API-KEY/quota"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  exchangeratesapi:
    name: "Exchange Rates API"
    method: "GET"
    url: "http://api.exchangeratesapi.io/v1/latest?access_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  extole:
    name: "Extole"
    method: "GET"
    url: "https://{{.Client_Domain}}.extole.io/api/v4/me"
    headers:
      Authorization: "Bearer {{.Key}}"
      content-type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  extractorapi:
    name: "ExtractorAPI"
    method: "GET"
    url: "https://extractorapi.com/api/v1/extractor?apikey={{.API_KEY}}&url=https://www.google.com"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  extractorapi1:
    name: "Extractor API"
    method: "GET"
    url: "https://extractorapi.com/api/v1/search/?apikey={{.Key}}&search_term=otters"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fossa:
    name: "FOSSA"
    method: "GET"
    url: "https://app.fossa.com/api/v2/projects"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fxmarketapi:
    name: "FXMarketAPI"
    method: "GET"
    url: "https://fxmarketapi.com/apilive?api_key={{.API_KEY}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  facebookaccesstoken:
    name: "Facebook - Access_Token"
    method: "GET"
    url: "https://developers.facebook.com/tools/debug/accesstoken/?access_token={{.Key}}&version=v3.2"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  facebookclientidsecret:
    name: "Facebook - Client_ID/Secret"
    method: "GET"
    url: "https://graph.facebook.com/oauth/access_token?client_id={{.Client_ID}}&client_secret={{.Client_Secret}}&redirect_uri=&grant_type=client_credentials"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fastforex:
    name: "Fast Forex"
    method: "GET"
    url: "https://api.fastforex.io/fetch-all?api_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fastly:
    name: "Fastly"
    method: "GET"
    url: "https://api.fastly.com/current_user"
    headers:
      Fastly-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  feedier:
    name: "Feedier"
    method: "GET"
    url: "https://api.feedier.com/v1/carriers"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fetchrss:
    name: "FetchRSS"
    method: "GET"
    url: "https://fetchrss.com/api/v1/feed/list?auth={{.AUTH_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fetchrss1:
    name: "Fetchrss"
    method: "GET"
    url: "http://fetchrss.com/api/v1/feed/list?auth={{.API_Auth_Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fibery:
    name: "Fibery"
    method: "GET"
    url: "https://{{.Your_Account}}.fibery.io/api/webhooks/v2"
    headers:
      Authorization: "Token {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  financialmodelingprep:
    name: "Financial Modeling Prep"
    method: "GET"
    url: "https://financialmodelingprep.com/api/v3/financial-statement-symbol-lists?apikey={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  findl:
    name: "Findl"
    method: "GET"
    url: "https://api.findl.com/v1.0/data/daily?apiKey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  finnhub:
    name: "Finnhub"
    method: "GET"
    url: "https://finnhub.io/api/v1/calendar/economic?token={{.API_TOKEN}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fitbit:
    name: "Fitbit"
    method: "GET"
    url: "https://api.fitbit.com/1/user/-/profile.json"
    headers:
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fixer:
    name: "Fixer"
    method: "GET"
    url: "https://data.fixer.io/api/latest?access_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  flat:
    name: "Flat"
    method: "GET"
    url: "https://api.flat.io/v2/me"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fleetbase:
    name: "Fleetbase"
    method: "GET"
    url: "https://api.fleetbase.io/v1"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  flickr:
    name: "Flickr"
    method: "GET"
    url: "https://www.flickr.com/services/rest/?method=flickr.tags.getHotList&api_key={{.API_KEY}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  flightlabs:
    name: "FlightLabs"
    method: "GET"
    url: "https://app.goflightlabs.com/airports?access_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  flightlabs1:
    name: "Flight Labs"
    method: "GET"
    url: "https://app.goflightlabs.com/retrieveLocation?query=Ottawa&access_key={{.Access_Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  float:
    name: "Float"
    method: "GET"
    url: "https://api.float.com/v3/people"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  flourishsoftware:
    name: "Flourish Software"
    method: "GET"
    url: "https://app.flourishsoftware.com/external/api/v1/facilities?limit=2"
    headers:
      Authorization: "Basic Basic_Auth"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  flowdash:
    name: "Flowdash"
    method: "GET"
    url: "https://app.flowdash.com/api/v1/workflows"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fond:
    name: "Fond"
    method: "GET"
    url: "https://api.fond.co/v1/users/{{.USER_ID}}"
    headers:
      Authorization: "Basic {{.Key}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  formio:
    name: "Form.io"
    method: "GET"
    url: "https://formio.form.io/current"
    headers:
      Content-Type: "application/json"
      x-jwt-token: "{{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  freshbooks:
    name: "FreshBooks"
    method: "GET"
    url: "https://api.freshbooks.com/test"
    headers:
      Authorization: "Bearer {{.API_TOKEN}}"
      Api-Version: "test-version"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  freshdesk:
    name: "Fresh Desk"
    method: "GET"
    url: "https://{{.Domain}}.freshdesk.com/api/v2/account"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  front:
    name: "Front"
    method: "GET"
    url: "https://api2.frontapp.com/accounts"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.ACCESS_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  greenhouse:
    name: "GREEN HOUSE グリーンハウス"
    method: "GET"
    url: "https://harvest.greenhouse.io/v1/users"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  gtmetrix:
    name: "GTmetrix"
    method: "GET"
    url: "https://gtmetrix.com/api/2.0/status"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  geoapify:
    name: "Geoapify"
    method: "GET"
    url: "https://maps.geoapify.com/v1/styles/osm-bright/style.json?apiKey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  geocodexyz:
    name: "Geocode.xyz"
    method: "GET"
    url: "https://geocode.xyz/51.4647,0.0079?json=1&auth={{.Auth_Token}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  getguru:
    name: "GetGuru"
    method: "GET"
    url: "https://api.getguru.com/api/v1/whoami"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  getaround:
    name: "Getaround"
    method: "GET"
    url: "https://api.getaround.com/users/me"
    headers:
      Authorization: "apikey {{.API_key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  githubaccesstoken:
    name: "GitHub - Access_Token"
    method: "GET"
    url: "https://api.github.com/user"
    headers:
      Authorization: "token {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  gladly:
    name: "Gladly"
    method: "GET"
    url: "https://organization.gladly.com/api/v1/agents"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  gocanvas:
    name: "GoCanvas"
    method: "GET"
    url: "https://www.gocanvas.com/apiv2/forms.xml"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  gocardless:
    name: "GoCardless"
    method: "GET"
    url: "https://api.gocardless.com/billing_requests"
    headers:
      Authorization: "Bearer {{.Key}}"
      GoCardless-Version: "2015-07-06"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  godaddy:
    name: "GoDaddy"
    method: "GET"
    url: "https://api.ote-godaddy.com/v1/orders?offset=0&limit=25&sort=-createdAt"
    headers:
      accept: "application/json"
      X-Market-Id: "en-US"
      Authorization: "sso-key {{.SSO_Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  gorest:
    name: "Go Rest"
    method: "GET"
    url: "https://gorest.co.in/public/v2/users/"
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  gofile:
    name: "Gofile"
    method: "GET"
    url: "https://api.gofile.io/getAccountDetails?token={{.Key}}&allDetails=true"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  golden:
    name: "Golden"
    method: "GET"
    url: "https://golden.com/api/v2/public/entities/"
    headers:
      accept: "application/json"
      apikey: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  goodday:
    name: "GoodDay"
    method: "GET"
    url: "https://api.goodday.work/2.0/users"
    headers:
      gd-api-token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  googlefordeveloperssafebrowsing:
    name: "Google for Developers - safebrowsing"
    method: "GET"
    url: "https://safebrowsing.googleapis.com/v4/threatListUpdates:fetch?key={{.API_KEY}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  googlefordeveloperswww:
    name: "Google for Developers - www"
    method: "GET"
    url: "https://www.googleapis.com/books/v1/volumes/zyTCAlFPjgYC?key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  grafanalabs:
    name: "Grafana Labs"
    method: "GET"
    url: "http://your.grafana.com/api/dashboards/db/mydash"
    headers:
      Authorization: "Bearer {{.API_TOKEN}}"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  graphhopper:
    name: "GraphHopper"
    method: "GET"
    url: "https://graphhopper.com/api/1/geocode?q=Philippines&key={{.API_KEY}}&type=json"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  groove:
    name: "Groove"
    method: "GET"
    url: "https://api.groovehq.com/v1/customers"
    headers:
      Authorization: "Bearer {{.Key}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  growthbook:
    name: "GrowthBook"
    method: "GET"
    url: "https://api.growthbook.io/api/v1"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  gumroad:
    name: "Gumroad"
    method: "GET"
    url: "https://api.gumroad.com/v2/user?access_token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  gusto:
    name: "Gusto"
    method: "GET"
    url: "https://api.gusto-demo.com/v1/me"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      X-Gusto-API-Version: "2022-09-15"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  hover:
    name: "HOVER"
    method: "GET"
    url: "https://hover.to/api/v2/jobs/"
    headers:
      Authorization: "Bearer {{.JWT_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  handy:
    name: "Handy"
    method: "GET"
    url: "https://partners.services.handy.com/api/v1/orders"
    headers:
      Authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  hellosign:
    name: "Hello Sign"
    method: "GET"
    url: "https://api.hellosign.com/v3/account"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  helpshift:
    name: "Helpshift"
    method: "GET"
    url: "https://api.helpshift.com/v1/{{.domain}}/agents/"
    headers:
      Accept: "application/json"
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  hinthealth:
    name: "Hint Health"
    method: "GET"
    url: "https://api.staging.hint.com/api/provider/patients"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  hive:
    name: "Hive"
    method: "GET"
    url: "https://api.thehive.ai/api/v1/tasks"
    headers:
      accept: "application/json"
      authorization: "token {{.Auth_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  holidayapi:
    name: "Holiday API"
    method: "GET"
    url: "https://holidayapi.com/v1/holidays?key={{.API_KEY}}&country=PH&year=2020"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  holidayapipretty:
    name: "Holiday API - pretty"
    method: "GET"
    url: "https://holidayapi.com/v1/holidays?pretty&key={{.Key}}&country=US&year=2020&language=EN"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  homebase:
    name: "Homebase"
    method: "GET"
    url: "https://api.joinhomebase.com/locations"
    headers:
      Authorization: "Bearer {{.Key}}"
      Accept: "application/vnd.homebase-v1+json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  hostio:
    name: "Host IO"
    method: "GET"
    url: "https://host.io/api/full/facebook.com?token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  hubspothapikey:
    name: "HubSpot - hapikey"
    method: "GET"
    url: "https://api.hubapi.com/owners/v2/owners?hapikey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  hubspotlogin:
    name: "HubSpot - login"
    method: "GET"
    url: "https://api.hubapi.com/account-info/v3/activity/login"
    headers:
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  iexcloud:
    name: "IEX Cloud"
    method: "GET"
    url: "https://cloud.iexapis.com/stable/stock/aapl/quote?token={{.API_TOKEN}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ip2location:
    name: "IP2Location"
    method: "GET"
    url: "https://api.ip2location.io/?key={{.Key}}&ip={{.IP}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ip2whois:
    name: "IP2WHOIS"
    method: "GET"
    url: "https://api.ip2whois.com/v2?key={{.Key}}&domain=daffa.tech&format=json"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ipqualityscore:
    name: "IPQualityScore"
    method: "GET"
    url: "https://www.ipqualityscore.com/api/json/report/{{.API_KEY}}?ip={{.IP}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ipstack:
    name: "IPStack"
    method: "GET"
    url: "https://api.ipstack.com/{{.IP}}?access_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ipfind:
    name: "IP Find"
    method: "GET"
    url: "https://app.ipfind.io/api/iplocation?apikey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ipinfoipdataprovider:
    name: "IPinfo – IP Data Provider"
    method: "GET"
    url: "https://ipinfo.io/json"
    headers:
      Authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  iqair:
    name: "IQAir"
    method: "GET"
    url: "http://api.airvisual.com/v2/countries?key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  imagga:
    name: "Imagga"
    method: "GET"
    url: "https://api.imagga.com/v2/tags?image_url={{.Image_URL}}"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  imgur:
    name: "Imgur"
    method: "GET"
    url: "https://api.imgur.com/3/account/{{.UserName}}"
    headers:
      Authorization: "Client-ID {{.Client_ID}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  impala:
    name: "Impala"
    method: "GET"
    url: "https://sandbox.impala.travel/v1/bookings"
    headers:
      x-api-key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  imperva:
    name: "Imperva"
    method: "GET"
    url: "https://api.imperva.com/policies/v2/policies"
    headers:
      accept: "application/json"
      x-API-Id: "{{.API_ID}}"
      x-API-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  improvmx:
    name: "ImprovMX"
    method: "GET"
    url: "https://api.improvmx.com/v3/account"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  infor:
    name: "Infor"
    method: "GET"
    url: "https://api.infor.com/v1/spaces/"
    headers:
      Authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  infura:
    name: "Infura"
    method: "POST"
    url: "https://mainnet.infura.io/v3/{{.Key}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  instacart:
    name: "Instacart"
    method: "GET"
    url: "https://connect.instacart.com/v2/post_checkout/orders/{{.Order_ID}}"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  instatus:
    name: "Instatus"
    method: "GET"
    url: "https://api.instatus.com/v1/pages"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  intercom:
    name: "Intercom"
    method: "GET"
    url: "https://api.intercom.io/me"
    headers:
      Authorization: "Bearer {{.Key}}"
      Intercom-Version: "2.10"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  interseller:
    name: "Interseller"
    method: "GET"
    url: "https://interseller.io/api/campaigns/list"
    headers:
      Accept: "application/json"
      X-API-Key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ipify:
    name: "Ipify"
    method: "GET"
    url: "https://geo.ipify.org/api/v2/country,city,vpn?apiKey={{.Key}}&ipAddress={{.IP}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  iterable:
    name: "Iterable"
    method: "GET"
    url: "https://api.iterable.com/api/export/data.json?dataTypeName=emailSend&range=Today&onlyFields=List.empty"
    headers:
      Api_Key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  jsonbin:
    name: "JSONBin"
    method: "GET"
    url: "https://api.jsonbin.io/v3/c"
    headers:
      X-Master-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  jumpcloud:
    name: "JumpCloud"
    method: "GET"
    url: "https://console.jumpcloud.com/api/systems"
    headers:
      x-api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  jungleworks:
    name: "JungleWorks"
    method: "GET"
    url: "https://prod-api.bulbul.io/view_all_users?api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  keen:
    name: "KEEN"
    method: "GET"
    url: "https://api.keen.io/3.0/projects/{{.PROJECT_ID}}/events?api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  karmacrm:
    name: "KarmaCRM"
    method: "GET"
    url: "https://app.karmacrm.com/api/v2/settings/integrations.json?api_token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  klarna:
    name: "Klarna"
    method: "GET"
    url: "https://api.klarna.com/customer-token/v1/tokens/{{.customer_Token}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  klipfolio:
    name: "Klipfolio"
    method: "GET"
    url: "https://app.klipfolio.com/api/1.0/users"
    headers:
      kf-api-key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  lineglobal:
    name: "LINE Global"
    method: "GET"
    url: "https://notify-api.line.me/api/status"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  languagelayer:
    name: "LanguageLayer"
    method: "GET"
    url: "https://api.languagelayer.com/detect?access_key={{.Key}}&query=The%20pessimist%20complains%20about%20the%20wind%3B%20the%20optimist%20expects%20it%20to%20change%3B%20the%20realist%20adjusts%20the%20sails"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  lattice:
    name: "Lattice"
    method: "GET"
    url: "https://api.latticehq.com/v1/users"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  leadspace:
    name: "Leadspace"
    method: "GET"
    url: "https://apigw.leadspace.com/v3/enrichment/results/{{.Job_ID}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  leanplum:
    name: "Leanplum"
    method: "GET"
    url: "https://api.leanplum.com/api?appId={{.App_ID}}&clientKey={{.CONTENT_KEY}}&apiVersion=1.0.6&action=getMessages"
    headers:
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  lendflow:
    name: "Lendflow"
    method: "GET"
    url: "https://app.lendflow.io/api/v1/deals"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{.Key}}"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  lendingclub:
    name: "LendingClub"
    method: "GET"
    url: "https://api.lendingclub.com/api/investor/{{.version}}/accounts/{{.investor_ID}}/portfolios"
    headers:
      Authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  lever:
    name: "Lever"
    method: "GET"
    url: "https://api.lever.co/v1/users"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  lightspeed:
    name: "Lightspeed"
    method: "GET"
    url: "https://abdojr.vendhq.com/api/2.0/users"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  linkedinclientidsecret:
    name: "LinkedIn - Client_ID/Secret"
    method: "POST"
    url: "https://www.linkedin.com/oauth/v2/accessToken"
    headers:
      Content-type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  liveramp:
    name: "LiveRamp"
    method: "GET"
    url: "https://api.liveramp.com/activation/v2/deliveries"
    headers:
      Authorization: "Bearer {{.Key}}"
      LR-Org-ID: "{{.Org_ID}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  livestorm:
    name: "Livestorm"
    method: "GET"
    url: "https://api.livestorm.co/v1/me"
    headers:
      Authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  livongo:
    name: "Livongo"
    method: "GET"
    url: "https://api.mystrength.livongo.com/partner/v2/users?page=0&limit=500"
    headers:
      x-session-token: "{{.access_token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  loadmill:
    name: "Loadmill"
    method: "GET"
    url: "https://app.loadmill.com/api/v1/labels?filter=CI_enable"
    headers:
      Accept: "application/vnd.loadmill+json; version=3"
      Authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  lob:
    name: "Lob"
    method: "GET"
    url: "https://api.lob.com/v1/postcards?limit=2"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  locationiq:
    name: "LocationIQ"
    method: "GET"
    url: "https://us1.locationiq.com/v1/reverse.php?key={{.API_KEY}}&lat=-37.870662&lon=144.9803321&format=json"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  lokalise:
    name: "Lokalise"
    method: "GET"
    url: "https://api.lokalise.com/api2/projects"
    headers:
      X-Api-Token: "{{.Key}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  loqate:
    name: "Loqate"
    method: "GET"
    url: "http://api.addressy.com/Capture/Interactive/Find/v1.00/json3.ws?Key={{.API_KEY}}&Countries=US,CA&Language=en&Limit=5&Text=BHAR"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  lumahealth:
    name: "Luma Health"
    method: "GET"
    url: "https://api.lumahealth.io/api/v2/users"
    headers:
      Authorization: "bearer {{.Access_token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  lunchmoney:
    name: "Lunch Money"
    method: "GET"
    url: "https://dev.lunchmoney.app/v1/me"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  lyft:
    name: "Lyft"
    method: "GET"
    url: "https://api.lyft.com/v1/profile"
    headers:
      Authorization: "{{.Access_token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  macaddressio:
    name: "MacAddress.io"
    method: "GET"
    url: "https://api.macaddress.io/v1?apiKey={{.Key}}&output=json&search={{.Mac_Address}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  magicbell:
    name: "MagicBell"
    method: "GET"
    url: "https://api.magicbell.com/users"
    headers:
      X-MAGICBELL-API-KEY: "{{.Key}}"
      X-MAGICBELL-API-SECRET: "{{.API_Secret}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  magnetic:
    name: "Magnetic"
    method: "GET"
    url: "https://app.magnetichq.com/Magnetic/rest/accountsAPI/itemTypes?token={{.API_TOKEN}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mailboxvalidator:
    name: "MailboxValidator"
    method: "GET"
    url: "https://api.mailboxvalidator.com/v1/email/free?email={{.Email}}&key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mailmodo:
    name: "Mailmodo"
    method: "POST"
    url: "https://api.mailmodo.com/api/v1/addToList"
    headers:
      mmApiKey: "{{._API_key}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mailsac:
    name: "Mailsac"
    method: "GET"
    url: "https://mailsac.com/api/me"
    headers:
      Mailsac-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  make:
    name: "Make"
    method: "GET"
    url: "https://eu1.make.com/api/v2/users?teamId=1"
    headers:
      Authorization: "Token {{.Auth_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  malshare:
    name: "MalShare"
    method: "GET"
    url: "https://api.malshare.com/api.php?api_key={{.YOUR_API_KEY}}&action=getlist"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mandrillapp:
    name: "Mandrill App"
    method: "POST"
    url: "https://mandrillapp.com/api/1.0/users/info"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  manifestlychecklists:
    name: "Manifestly Checklists"
    method: "GET"
    url: "https://api.manifest.ly/api/v1/checklists/?api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mapquest:
    name: "MapQuest"
    method: "GET"
    url: "https://www.mapquestapi.com/datamanager/v2/get-column-types?key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mapbox:
    name: "Mapbox"
    method: "GET"
    url: "https://api.mapbox.com/tokens/v2?access_token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  marketstack:
    name: "MarketStack"
    method: "GET"
    url: "https://api.marketstack.com/v1/eod?access_key={{.Key}}&symbols=AAPL"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mashery:
    name: "Mashery"
    method: "GET"
    url: "https://api.mashery.com/v3/rest/members"
    headers:
      Authorization: "Bearer {{.Token}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mattermost:
    name: "Mattermost"
    method: "GET"
    url: "http://{{.Instance_Host}}/api/v4/users"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mavenlink:
    name: "Mavenlink"
    method: "GET"
    url: "https://api.mavenlink.com/api/v1/workspaces.json"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mediastack:
    name: "Mediastack"
    method: "GET"
    url: "https://api.mediastack.com/v1/news?access_key={{.Key}}&keywords=tennis&countries=us,gb,de"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  medium:
    name: "Medium"
    method: "GET"
    url: "https://api.medium.com/v1/me"
    headers:
      Authorization: "Bearer {{.Key}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  meetchopra:
    name: "Meet Chopra"
    method: "GET"
    url: "https://verifier.meetchopra.com/verify/{{.USER_ID}}?token={{.API_TOKEN}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  meistertask:
    name: "MeisterTask"
    method: "GET"
    url: "https://www.meistertask.com/api/persons"
    headers:
      Authorization: "Bearer {{.ACCESS_TOKEN}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  meltwater:
    name: "Meltwater"
    method: "GET"
    url: "https://api.meltwater.com/v3/owned/accounts"
    headers:
      accept: "application/json"
      apikey: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mercury:
    name: "Mercury"
    method: "GET"
    url: "https://api.mercury.com/api/v1/accounts"
    headers:
      Authorization: "Bearer {{.Key}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  messagebird:
    name: "MessageBird"
    method: "GET"
    url: "https://rest.messagebird.com/balance"
    headers:
      Authorization: "AccessKey {{.Access_Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  method:
    name: "Method"
    method: "GET"
    url: "https://rest.method.me/api/v1/files"
    headers:
      Authorization: "APIKey {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mindmeister:
    name: "MindMeister"
    method: "GET"
    url: "https://www.mindmeister.com/api/v2/users/me"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  miro:
    name: "Miro"
    method: "GET"
    url: "https://api.miro.com/v1/oauth-token"
    headers:
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mite:
    name: "Mite"
    method: "GET"
    url: "https://{{.Account_Name}}.mite.de/users.json"
    headers:
      X-MiteApiKey: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mixmax:
    name: "Mixmax"
    method: "GET"
    url: "https://api.mixmax.com/v1/users/me"
    headers:
      X-API-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mixpanel:
    name: "Mixpanel"
    method: "GET"
    url: "https://mixpanel.com/api/app/me"
    headers:
      authorization: "Basic {{.Base64_Auth}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  mojoauth:
    name: "MojoAuth"
    method: "POST"
    url: "https://api.mojoauth.com/token/jwks"
    headers:
      X-API-Key: "{{.YOUR_API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  moralisweb3:
    name: "Moralis Web3"
    method: "GET"
    url: "https://deep-index.moralis.io/api/v2.2/block/15863321?chain=eth&include=internal_transactions"
    headers:
      accept: "application/json"
      X-API-Key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  mux:
    name: "Mux"
    method: "GET"
    url: "https://api.mux.com/video/v1/assets"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  nasdaq:
    name: "Nasdaq"
    method: "GET"
    url: "https://data.nasdaq.com/api/v3/datasets/FRED/GDP.csv?api_key={{.API_KEY}}&collapse=annual&rows=6&order=asc&column_index=1"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  newrelicget:
    name: "New Relic - Get"
    method: "GET"
    url: "https://api.newrelic.com/v2/users.json"
    headers:
      x-api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  newrelicpost:
    name: "New Relic - Post"
    method: "POST"
    url: "https://api.newrelic.com/graphql"
    headers:
      Content-Type: "application/json"
      API-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  newsapi:
    name: "News API"
    method: "GET"
    url: "https://newsapi.org/v2/everything?q=Apple&from=2021-09-29&sortBy=popularity&apiKey={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  nexmo:
    name: "Nexmo"
    method: "GET"
    url: "https://rest.nexmo.com/account/get-balance?api_key={{.API_KEY}}&api_secret={{.API_SECRET}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  nozbe:
    name: "Nozbe"
    method: "GET"
    url: "https://api4.nozbe.com/v1/api/users?limit=100&offset=0"
    headers:
      accept: "application/json"
      Authorization: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  nylas:
    name: "Nylas"
    method: "GET"
    url: "https://api.nylas.com/account"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  oanda:
    name: "OANDA"
    method: "GET"
    url: "https://exchange-rates-api.oanda.com/v2/rates/aggregated.xml"
    headers:
      Accept: "application/json"
      Authorization: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  onedesk:
    name: "OneDesk"
    method: "GET"
    url: "https://app.onedesk.com/rest/2.0/organization/getOrgInfo?token={{.API_TOKEN}}"
    headers:
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  onesignal:
    name: "OneSignal"
    method: "GET"
    url: "https://onesignal.com/api/v1/apps"
    headers:
      Authorization: "Basic {{.USER_AUTH_KEY}}"
      accept: "text/plain"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  onomondo:
    name: "Onomondo"
    method: "GET"
    url: "https://api.onomondo.com/connectors"
    headers:
      Authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  openapihub:
    name: "OpenAPIHub"
    method: "GET"
    url: "https://trial-api-credit-card-number-generator-2m83.gw.openapihub.com/random_card_number?vendor=visa"
    headers:
      X-OpenAPIHub-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  opengraphr:
    name: "OpenGraphr"
    method: "GET"
    url: "https://api.opengraphr.com/v1/og?api_token={{.Key}}&url={{.URL}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  orderful:
    name: "Orderful"
    method: "GET"
    url: "https://api.orderful.com/v3/organizations/me"
    headers:
      accept: "application/json"
      orderful-api-key: "API_KEY"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  orghunter:
    name: "OrgHunter"
    method: "GET"
    url: "http://data.orghunter.com/v1/charitybasic?user_key={{.YOUR_API_KEY}}&ein=590774235"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ortto:
    name: "Ortto"
    method: "GET"
    url: "https://api2.autopilothq.com/v1/account"
    headers:
      autopilotapikey: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  outreach:
    name: "Outreach"
    method: "GET"
    url: "https://api.outreach.io/api/v2/accounts"
    headers:
      Authorization: "Bearer {{.JWT_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  owlbotenglishdictionaryapi:
    name: "Owlbot English Dictionary API"
    method: "GET"
    url: "https://owlbot.info/api/v4/dictionary/security"
    headers:
      Authorization: "Token {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  pdflayer:
    name: "PDFLayer"
    method: "GET"
    url: "https://api.pdflayer.com/api/convert?access_key={{.Key}}&document_url={{.URL}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  paddle:
    name: "Paddle"
    method: "GET"
    url: "https://api.paddle.com/customers"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  pagecdn:
    name: "PageCDN"
    method: "GET"
    url: "https://pagecdn.com/api/v2/private/repo/files?apikey={{.Key}}&repo=site/wxyz"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  parsehub:
    name: "ParseHub"
    method: "GET"
    url: "https://www.parsehub.com/api/v2/projects?api_key={{.API_KEY}}&limit=1"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  partnerize:
    name: "Partnerize"
    method: "GET"
    url: "https://api.partnerize.com/reference/user_context"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  pastebin:
    name: "Pastebin"
    method: "POST"
    url: "https://pastebin.com/api/api_post.php"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  paypalclientidsecret:
    name: "PayPal - Client_ID/Secret"
    method: "POST"
    url: "https://api.sandbox.paypal.com/v1/oauth2/token"
    headers:
      Accept: "application/json"
      Accept-Language: "en_US"
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  paydirt:
    name: "Paydirt"
    method: "GET"
    url: "https://paydirtapp.com/api/v1/clients?api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  pendoio:
    name: "Pendo.io"
    method: "GET"
    url: "https://app.pendo.io/api/v1/metadata/schema/account"
    headers:
      content-type: "application/json"
      x-pendo-integration-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  peoplegrove:
    name: "PeopleGrove"
    method: "GET"
    url: "https://api.peoplegrove.com/v1/users"
    headers:
      Authorization: "bearer {{.API_token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  percy:
    name: "Percy"
    method: "GET"
    url: "https://percy.io/api/v1/projects"
    headers:
      Accept: "application/vnd.percy+json; version=3"
      Authorization: "Token {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  petfinder:
    name: "Petfinder"
    method: "GET"
    url: "https://api.petfinder.com/v2/oauth2/token"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  pinata:
    name: "Pinata"
    method: "GET"
    url: "https://api.pinata.cloud/data/pinList?status=pinned"
    headers:
      pinata_api_key: "{{.Key}}"
      pinata_secret_api_key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  pinatacloud:
    name: "Pinata.Cloud"
    method: "GET"
    url: "https://api.pinata.cloud/data/pinList?status=pinned"
    headers:
      pinata_api_key: "{{.Key}}"
      pinata_secret_api_key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  pinterest:
    name: "Pinterest"
    method: "GET"
    url: "https://api.pinterest.com/v5/user_account"
    headers:
      Authorization: "Bearer {{.ACCESS_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  pivotaltracker:
    name: "Pivotal Tracker"
    method: "GET"
    url: "https://www.pivotaltracker.com/services/v5/me"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  pivotaltrackertracker:
    name: "Pivotal Tracker - Tracker"
    method: "GET"
    url: "https://www.pivotaltracker.com/services/v5/me?fields=%3Adefault"
    headers:
      X-TrackerToken: "{{.Access_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  pixabay:
    name: "Pixabay"
    method: "GET"
    url: "https://pixabay.com/api/videos/?key={{.API_KEY}}&q=yellow+flowers"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  pixlee:
    name: "Pixlee"
    method: "GET"
    url: "https://distillery-analytics.pixlee.com/v1/accounts/account_id/customers?page=1&ipp=30&api_key={{.API_KEY}}"
    headers:
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  planyo:
    name: "Planyo"
    method: "GET"
    url: "https://www.planyo.com/rest/?method=get_site_info&api_key={{.API_KEY}}"
    headers:
      Accept: "application/vnd.planyo+json; version=3"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  poloniex:
    name: "Poloniex"
    method: "POST"
    url: "https://poloniex.com/tradingApi"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Key: "{{.API_KEY}}"
      Sign: "{{.SIGNATURE}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  powrbot:
    name: "Powrbot"
    method: "GET"
    url: "https://powrbot.com/api/v1/search/single/?company=Apple"
    headers:
      Authorization: "secret-key {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  procore:
    name: "ProCore"
    method: "GET"
    url: "https://api.procore.com/users"
    headers:
      Authorization: "Bearer {{.Key}}"
      Accept: "application.json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  procore1:
    name: "Procore"
    method: "GET"
    url: "https://api.procore.com/users"
    headers:
      Authorization: "Bearer {{.Key}}"
      Accept: "application.json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  productboard:
    name: "Productboard"
    method: "GET"
    url: "https://api.productboard.com/users"
    headers:
      X-Version: "1"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  proxykingdom:
    name: "ProxyKingdom"
    method: "GET"
    url: "https://api.proxykingdom.com/proxy?token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  proxycrawl:
    name: "Proxycrawl"
    method: "GET"
    url: "https://api.proxycrawl.com/leads?token={{.Key}}&domain={{.Domain}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  purestake:
    name: "PureStake"
    method: "GET"
    url: "https://testnet-algorand.api.purestake.io/idx2/health"
    headers:
      x-api-key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  qubole:
    name: "Qubole"
    method: "GET"
    url: "https://us.qubole.com/api/v1.2/account"
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
      X-AUTH-TOKEN: "{{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  quip:
    name: "Quip"
    method: "GET"
    url: "https://platform.quip.com/1/users/contacts"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  qwilr:
    name: "Qwilr"
    method: "GET"
    url: "https://api.qwilr.com/v1/blocks/saved"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  rainforestqa:
    name: "Rainforest QA"
    method: "GET"
    url: "https://app.rainforestqa.com/api/1/users/{{.User_ID}}"
    headers:
      CLIENT_TOKEN: "{{.Key}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  rapid:
    name: "Rapid"
    method: "GET"
    url: "https://vsco-image.p.rapidapi.com/vsco?url=https%3A%2F%2Fvsco.co%2Fhannahsasse%2Fmedia%2F5f47dcb93a25ce66091cff56"
    headers:
      X-RapidAPI-Host: "vsco-image.p.rapidapi.com"
      X-RapidAPI-Key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  reachmail:
    name: "ReachMail"
    method: "GET"
    url: "https://services.reachmail.net/Administration/Users/Current"
    headers:
      Authorization: "Bearer {{.Key}}"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  readme:
    name: "Read Me"
    method: "GET"
    url: "https://dash.readme.com/api/v1"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  recurly:
    name: "Recurly"
    method: "GET"
    url: "https://v3.recurly.com/accounts"
    headers:
      Authorization: "Bearer {{.Key}}"
      accept: "application/vnd.recurly.v2021-02-25"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  recurlylimit:
    name: "Recurly - limit"
    method: "GET"
    url: "https://v3.recurly.com/accounts?limit=200"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  reddit:
    name: "Reddit"
    method: "GET"
    url: "https://www.reddit.com/api/v1/me"
    headers:
      Authorization: "Bearer API_Token"
      Accept: "application.json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  redfin:
    name: "Redfin"
    method: "GET"
    url: "https://redfin-com-data.p.rapidapi.com/agents/detail?profile_url=%2Freal-estate-agents%2Fmandy-kaur"
    headers:
      X-RapidAPI-Host: "redfin-com-data.p.rapidapi.com"
      X-RapidAPI-Key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  restpack:
    name: "Restpack"
    method: "GET"
    url: "https://restpack.io/api/screenshot/usage?access_token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  retool:
    name: "Retool"
    method: "GET"
    url: "https://retool.com/api/v2/users/{{.User_ID}}"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  retoolallusers:
    name: "Retool - All Users"
    method: "GET"
    url: "https://retool.com/api/v2/users"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  revai:
    name: "Rev AI"
    method: "GET"
    url: "https://api.rev.ai/speechtotext/v1/account"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  reviewapi:
    name: "ReviewAPI"
    method: "GET"
    url: "https://app.reviewapi.io/api/v1/reviews?apikey={{.Key}}&url={{.URL}}&amount=25"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  rijksmuseum:
    name: "Rijksmuseum"
    method: "GET"
    url: "https://www.rijksmuseum.nl/api/nl/usersets?key={{.API_KEY}}&format=json&page=2"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ringcentral:
    name: "RingCentral"
    method: "GET"
    url: "https://platform.devtest.ringcentral.com/restapi/oauth/authorize?response_type=code&redirect_uri={{.REDIRECT_URI}}&client_id={{.CLIENT_ID}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  rollbar:
    name: "Rollbar"
    method: "GET"
    url: "https://api.rollbar.com/api/1/users"
    headers:
      X-Rollbar-Access-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  runrunit:
    name: "Runrun.it"
    method: "GET"
    url: "https://runrun.it/api/v1.0/users"
    headers:
      App-Key: "{{.APP_KEY}}"
      User-Token: "{{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  serphouse:
    name: "SERPHouse"
    method: "GET"
    url: "https://api.serphouse.com/account/info"
    headers:
      Authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  sslmate:
    name: "SSLMate"
    method: "GET"
    url: "https://sslmate.com/api/v2/certs/{{.domain_Name}}"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  sagehr:
    name: "Sage HR"
    method: "GET"
    url: "https://{{.subdomain}}.sage.hr/api/employees"
    headers:
      X-Auth-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  salesblink:
    name: "SalesBlink"
    method: "GET"
    url: "https://run.salesblink.io/api/public/lists"
    headers:
      Authorization: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  samsara:
    name: "Samsara"
    method: "GET"
    url: "https://api.samsara.com/users"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  satismeter:
    name: "SatisMeter"
    method: "GET"
    url: "https://app.satismeter.com/api/users?project={{.PROJECT_ID}}"
    headers:
      Authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  saucelabs:
    name: "Sauce Labs"
    method: "GET"
    url: "https://api.eu-central-1.saucelabs.com/rest/v1/info/status"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  savepage:
    name: "SavePage"
    method: "GET"
    url: "https://api.savepage.io/v1?key={{.Key}}&q={{.URL}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  scalr:
    name: "Scalr"
    method: "GET"
    url: "https://{{.Company_Name}}.scalr.io/api/iacp/v3/users"
    headers:
      Prefer: "profile=preview"
      accept: "application/vnd.api+json"
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  scanii:
    name: "Scanii"
    method: "GET"
    url: "https://api.scanii.com/v2.1/ping"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  scrapestack:
    name: "ScrapeStack"
    method: "GET"
    url: "https://api.scrapestack.com/scrape?access_key={{.Key}}&url={{.URL}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  scraperapi:
    name: "ScraperAPI"
    method: "GET"
    url: "http://api.scraperapi.com/account?api_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  scraperbox:
    name: "Scraperbox"
    method: "GET"
    url: "https://api.scraperbox.com/scrape?token={{.Key}}&url={{.URL}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  scrapingant:
    name: "ScrapingAnt"
    method: "POST"
    url: "https://api.scrapingant.com/v1/general"
    headers:
      x-api-key: "{{.Key}}"
      accept: "application/json"
      content-type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  scrapingbee:
    name: "ScrapingBee"
    method: "GET"
    url: "https://app.scrapingbee.com/api/v1/?api_key={{.API_KEY}}&url={{.YOUR_URL}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  scrapingdog:
    name: "Scrapingdog"
    method: "GET"
    url: "https://api.scrapingdog.com/scrape?api_key={{.Key}}&url=https://example.com/ip&dynamic=false"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  screenshotapi:
    name: "ScreenshotAPI"
    method: "GET"
    url: "https://shot.screenshotapi.net/screenshot?token={{.Key}}&url=URL"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  screenshotapiurl:
    name: "ScreenshotAPI - Url"
    method: "GET"
    url: "https://shot.screenshotapi.net/screenshot?token={{.Key}}&url=https://apple.com&scrolling_screenshot=true"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  screenshotlayer:
    name: "ScreenshotLayer"
    method: "GET"
    url: "http://api.screenshotlayer.com/api/capture?access_key={{.Key}}&url=URL"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  scripted:
    name: "Scripted"
    method: "GET"
    url: "https://api.scripted.com/{{.Organization_Key}}/v1/industries"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  seatgeek:
    name: "SeatGeek"
    method: "GET"
    url: "https://api.seatgeek.com/2/events?client_id={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  securitytrails:
    name: "SecurityTrails"
    method: "GET"
    url: "https://api.securitytrails.com/v1/domain/oracle.com/subdomains?children_only=false&include_inactive=true"
    headers:
      APIKEY: "{{.Key}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  segment:
    name: "Segment"
    method: "GET"
    url: "https://api.segmentapis.com/users"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  segmentapp:
    name: "Segment App"
    method: "GET"
    url: "https://api.segmentapis.com/warehouses?pagination%5Bcursor%5D=string"
    headers:
      Authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  seismic:
    name: "Seismic"
    method: "GET"
    url: "https://api.seismic.com/integration/v2/users?limit=10&offset=0"
    headers:
      Authorization: "{{.Token}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  selectpdf:
    name: "SelectPdf"
    method: "GET"
    url: "https://selectpdf.com/api2/convert/?key={{.API_KEY}}&url=https://www.google.com"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  sendbird:
    name: "Sendbird"
    method: "GET"
    url: "https://gate.sendbird.com/api/v2/applications"
    headers:
      Api-Token: "{{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  serpstack:
    name: "SerpStack"
    method: "GET"
    url: "http://api.serpstack.com/search?access_key={{.Key}}&query=mcdonalds"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  shipday:
    name: "Shipday"
    method: "GET"
    url: "https://api.shipday.com/partner/members"
    headers:
      PARTNER-API-KEY: "{{.API_KEY}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  shortcut:
    name: "Shortcut"
    method: "GET"
    url: "https://api.app.shortcut.com/api/v3/member"
    headers:
      Content-Type: "application/json"
      Shortcut-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  shotstack:
    name: "Shotstack"
    method: "GET"
    url: "https://api.shotstack.io/serve/v1/assets/{{.KEY_ID}}"
    headers:
      Accept: "application/json"
      x-api-key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  shutterstock:
    name: "Shutterstock"
    method: "GET"
    url: "https://api.shutterstock.com/v2/user"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  sigopt:
    name: "SigOpt"
    method: "GET"
    url: "https://api.sigopt.com/v1/clients/{{.Client_ID}}"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  signupgenius:
    name: "SignUpGenius"
    method: "GET"
    url: "https://api.signupgenius.com/v2/k/user/profile/?user_key={{.Key}}"
    headers:
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  signalwire:
    name: "SignalWire"
    method: "GET"
    url: "https://{{.Domain}}.signalwire.com/api/laml/2010-04-01/Accounts"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  signaturit:
    name: "Signaturit"
    method: "GET"
    url: "https://api.sandbox.signaturit.com/v3/team/users.json"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  simfinanalytics:
    name: "SimFin Analytics"
    method: "GET"
    url: "https://simfin.com/api/v2/companies/list?api-key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  simplesat:
    name: "Simplesat"
    method: "GET"
    url: "https://api.simplesat.io/api/answers/"
    headers:
      X-Simplesat-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  simvoly:
    name: "Simvoly"
    method: "GET"
    url: "https://rendyplayground.simvoly.com/api/site/members?group_id={{.GROUP_ID}}&limit=25&skip=25"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  sinch:
    name: "Sinch"
    method: "GET"
    url: "https://numbers.api.sinch.com/v1/projects/{{.Organization_ID}}/availableNumbers?regionCode=US&type=LOCAL"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  sirv:
    name: "Sirv"
    method: "POST"
    url: "https://api.sirv.com/v2/token"
    headers:
      authorization: "Bearer BEARER_TOKEN_HERE"
      content-type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  siteleaf:
    name: "Siteleaf"
    method: "GET"
    url: "https://api.siteleaf.com/v2/sites"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  skedulo:
    name: "Skedulo"
    method: "GET"
    url: "https://api.skedulo.com/auth/whoami?access_token={{.Key}}"
    headers:
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  skrapp:
    name: "Skrapp"
    method: "GET"
    url: "https://api.skrapp.io/api/v2/account"
    headers:
      X-Access-Key: "{{.Access_Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  skybiometry:
    name: "SkyBiometry"
    method: "GET"
    url: "http://api.skybiometry.com/fc/account/users.json?api_key={{.API_KEY}}&api_secret={{.API_Secret}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  smartbearsoftwareapikey:
    name: "SmartBear Software - API_Key"
    method: "GET"
    url: "https://cloud.bitbar.com/api/me"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  smartbearsoftwareaccesstoken:
    name: "SmartBear Software - Access_Token"
    method: "GET"
    url: "https://cloud.bitbar.com/api/me?access_token={{.ACCESS_TOKEN}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  smartrecruiters:
    name: "SmartRecruiters"
    method: "GET"
    url: "https://api.smartrecruiters.com/users/me"
    headers:
      accept: "application/json"
      x-smarttoken: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  smartsheet:
    name: "Smartsheet"
    method: "GET"
    url: "https://api.smartsheet.com/2.0/home?include=source"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  smarty:
    name: "Smarty"
    method: "GET"
    url: "https://us-reverse-geo.api.smarty.com/lookup?auth-id={{.Clinet_ID}}&auth-token={{.Client_Token}}&latitude=40.202605&longitude=-111.621959"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  snapdocs:
    name: "Snapdocs"
    method: "GET"
    url: "https://staging.snapdocs.com/mobile_notary_api/v1/clients"
    headers:
      Content-Type: "application/json"
      X-AUTH-TOKEN: "{{.api_key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  snipcart:
    name: "Snipcart"
    method: "GET"
    url: "https://app.snipcart.com/api/orders"
    headers:
      Authorization: "Basic {{.Key}}"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  sonar:
    name: "Sonar"
    method: "GET"
    url: "https://sonarcloud.io/api/authentication/validate"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  sovrn:
    name: "Sovrn"
    method: "GET"
    url: "https://rest.viglink.com/api/account/campaigns"
    headers:
      Authorization: "secret {{.SECRET_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  speakpost:
    name: "SpeakPost"
    method: "GET"
    url: "https://api.sparkpost.com/api/v1/account?include=usage"
    headers:
      Authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  speechtextai:
    name: "SpeechText.AI"
    method: "GET"
    url: "https://api.speechtext.ai/results?key={{.API_Secret}}&task={{.Task_ID}}&summary=true&summary_size=15&highlights=true&max_keywords=10"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  spinwheel:
    name: "Spinwheel"
    method: "GET"
    url: "https://sandbox-api.spinwheel.io/v1/users"
    headers:
      Accept: "application/json"
      Authorization: "Bearer"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  splunk:
    name: "Splunk"
    method: "GET"
    url: "https://api.us1.signalfx.com/v2/dashboard"
    headers:
      Content-Type: "application/json"
      X-Sf-Token: "{{.AUTH_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  sportmonks:
    name: "Sportmonks"
    method: "GET"
    url: "https://api.sportmonks.com/v3/football/fixtures/18535517?api_token={{.API_token}}&include=events&filters=eventTypes:18"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  sportradar:
    name: "Sportradar"
    method: "GET"
    url: "https://api.sportradar.us/nfl/official/trial/v5/en/games/2019/reg/schedule.xml?api_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  spotifyaccesstoken:
    name: "Spotify - Access_Token"
    method: "GET"
    url: "https://api.spotify.com/v1/users/User_ID"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  spotifyclientidsecret:
    name: "Spotify - Client_ID/Secret"
    method: "POST"
    url: "https://accounts.spotify.com/api/token"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  spotlercrm:
    name: "Spotler CRM"
    method: "GET"
    url: "https://apiv4.reallysimplesystems.com/accounts"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  spring:
    name: "Spring"
    method: "GET"
    url: "https://api.teespring.com/v1/users/me?app_id={{.App_ID}}&access_token={{.Key}}"
    headers:
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  squarespace:
    name: "Squarespace"
    method: "GET"
    url: "https://api.squarespace.com/1.0/profiles/"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  squareupsandbox:
    name: "Squareup Sandbox"
    method: "GET"
    url: "https://connect.squareupsandbox.com/v2/bank-accounts"
    headers:
      Square-Version: "2023-11-15"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  stackshare:
    name: "StackShare"
    method: "POST"
    url: "https://api.stackshare.io/graphql"
    headers:
      accept: "application/json"
      x-api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  statuscake:
    name: "StatusCake"
    method: "GET"
    url: "https://api.statuscake.com/v1/uptime-locations"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  statuscakecom:
    name: "StatusCake.com"
    method: "GET"
    url: "https://api.statuscake.com/v1/uptime"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  statuspage:
    name: "Statuspage"
    method: "GET"
    url: "https://api.statuspage.io/v1/pages/rp03bmx8znxb.json"
    headers:
      Authorization: "OAuth {{.Auth_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  statuspal:
    name: "Statuspal"
    method: "GET"
    url: "https://statuspal.io/api/v2/status_pages/{{.subdomain}}/members"
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      Authorization: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  stitchdata:
    name: "Stitchdata"
    method: "GET"
    url: "https://api.stitchdata.com/notifications/public/v1/api/hooks"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  stockdate:
    name: "StockDate"
    method: "GET"
    url: "https://api.stockdata.org/v1/news/all?symbols=AAPL,TSLA&filter_entities=true&api_token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  storeleads:
    name: "Store Leads"
    method: "GET"
    url: "https://storeleads.app/json/api/v1/all/list/List%20Name"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  storecove:
    name: "Storecove"
    method: "GET"
    url: "https://api.storecove.com/api/v2/document_submissions/guid/evidence"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.API_KEY}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  storenvy:
    name: "Storenvy"
    method: "GET"
    url: "https://api.storenvy.com/v1/store.json?api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  strava:
    name: "Strava"
    method: "GET"
    url: "https://www.strava.com/api/v3/athlete"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  streak:
    name: "Streak"
    method: "GET"
    url: "https://api.streak.com/api/v1/users/me"
    headers:
      Content-Type: "application/json"
      accept: "application/json"
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  stripoemail:
    name: "Stripo.email"
    method: "GET"
    url: "https://stripo.email/emailgeneration/v1/validate"
    headers:
      Stripo-Api-Auth: "{{.API_TOKEN}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  sumologic:
    name: "Sumo Logic"
    method: "GET"
    url: "https://api.{{.Deployment}}.sumologic.com/api/v1/users"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  supportivekoala:
    name: "Supportivekoala"
    method: "GET"
    url: "https://api.supportivekoala.com/v1/images"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  surveymonkey:
    name: "SurveyMonkey"
    method: "GET"
    url: "https://api.surveymonkey.com/v3/users/me"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Access_token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  survicate:
    name: "Survicate"
    method: "GET"
    url: "https://data-api.survicate.com/v2/surveys"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  swiftstack:
    name: "SwiftStack"
    method: "GET"
    url: "https://platform.swiftstack.com/api/v1/users/"
    headers:
      Authorization: "apikey {{.Username}} : {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  swrve:
    name: "Swrve"
    method: "POST"
    url: "https://{{.app_id}}.api.swrve.com/1/user"
    headers:
      content-type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  synchrony:
    name: "Synchrony"
    method: "GET"
    url: "http://api-stg.syf.com/m2020/customers/1/profile"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tcpsoftware:
    name: "TCP Software"
    method: "GET"
    url: "https://www.humanity.com/api/v2/me?access_token={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tibco:
    name: "TIBCO"
    method: "GET"
    url: "https://api.cloud.tibco.com/tci/v1/subscriptions/0/apps"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tmetrictimetracker:
    name: "TMetric Time Tracker"
    method: "GET"
    url: "https://app.tmetric.com/api/v3/user"
    headers:
      accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tailscaleget:
    name: "Tailscale - Get"
    method: "GET"
    url: "https://api.tailscale.com/api/v2/tailnet/-/devices"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tailscalepost:
    name: "Tailscale - Post"
    method: "POST"
    url: "https://api.tailscale.com/api/v2/oauth/token"
    headers:
      content-type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  talkable:
    name: "Talkable"
    method: "GET"
    url: "https://www.talkable.com/api/v2/campaigns?site_slug={{.Site_Slug}}"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  talkdesk:
    name: "Talkdesk"
    method: "GET"
    url: "https://api.talkdeskapp.com/users?page=1&per_page=20"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tallyfy:
    name: "Tallyfy"
    method: "GET"
    url: "https://api.tallyfy.com/me"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tatum:
    name: "Tatum"
    method: "GET"
    url: "https://api.tatum.io/v3/subscription?pageSize=10"
    headers:
      x-api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  taxjar:
    name: "TaxJar"
    method: "GET"
    url: "https://api.taxjar.com/v2/customers"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  teachable:
    name: "Teachable"
    method: "GET"
    url: "https://developers.teachable.com/v1/users"
    headers:
      accept: "application/json"
      apiKey: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  teamgate:
    name: "Teamgate"
    method: "GET"
    url: "https://api.teamgate.com/v4/users"
    headers:
      X-App-Key: "{{.APP_Key}}"
      X-Auth-Token: "{{.AUTH_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  teamwork:
    name: "Teamwork"
    method: "GET"
    url: "https://{{.Subdomain_name}}.teamwork.com/projects/api/v2/me.json"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tefter:
    name: "Tefter"
    method: "POST"
    url: "https://www.tefter.io/api/bookmarks?url=https://www.google.com"
    headers:
      Content-Type: "application/json"
      X-User-Token: "{{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tenable:
    name: "Tenable"
    method: "GET"
    url: "https://customer.tenable.ad/api/users"
    headers:
      x-api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  terminus:
    name: "Terminus"
    method: "GET"
    url: "https://api.terminusapp.com/v1/projects"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  terraformbyhashi:
    name: "Terraform by Hashi"
    method: "GET"
    url: "https://app.terraform.io/api/v2/account/details"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  testingbot:
    name: "TestingBot"
    method: "GET"
    url: "https://api.testingbot.com/v1/user"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  theoddsapi:
    name: "The Odds API"
    method: "GET"
    url: "https://api.the-odds-api.com/v4/sports/?apiKey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  thinkific:
    name: "Thinkific"
    method: "GET"
    url: "https://api.thinkific.com/api/public/v1/users"
    headers:
      X-Auth-API-Key: "{{.Key}}"
      X-Auth-Subdomain: "{{.Your_Subdomain}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  thousandeyes:
    name: "ThousandEyes"
    method: "GET"
    url: "https://api.thousandeyes.com/v6/tests.json"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  thumbtack:
    name: "Thumbtack"
    method: "GET"
    url: "https://pro-api.thumbtack.com/v2/get-thumbtack-info"
    headers:
      Authorization: "Bearer {{.Key}}"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tickettailor:
    name: "Ticket Tailor"
    method: "GET"
    url: "https://api.tickettailor.com/v1/orders"
    headers:
      Accept: "application/json"
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  ticketmaster:
    name: "Ticketmaster"
    method: "GET"
    url: "https://app.ticketmaster.com/discovery/v2/events.json?apikey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  timecamp:
    name: "TimeCamp"
    method: "GET"
    url: "https://app.timecamp.com/third_party/api/users"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  timezoneapi:
    name: "Timezone API"
    method: "GET"
    url: "https://timezoneapi.io/api/ip/?token={{.API_TOKEN}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tipalti:
    name: "Tipalti"
    method: "GET"
    url: "https://api-p.tipalti.com/api/v1/gl-accounts"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Access_token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tmetric:
    name: "Tmetric"
    method: "GET"
    url: "https://app.tmetric.com/api/v3/accounts/{{.Acc_ID}}/balance?userId={{.User_ID}}"
    headers:
      Authorization: "Bearer {{.Key}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  todoist:
    name: "Todoist"
    method: "GET"
    url: "https://api.todoist.com/rest/v1/projects"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  toggltrack:
    name: "Toggl Track"
    method: "GET"
    url: "https://api.track.toggl.com/api/v9/me"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  tokeet:
    name: "Tokeet"
    method: "GET"
    url: "https://capi.tokeet.com/v1/user/me?account={{.Account_ID}}"
    headers:
      Authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tomorrowio:
    name: "Tomorrow.io"
    method: "GET"
    url: "https://api.tomorrow.io/v4/weather/realtime?location=toronto&apikey={{.Key}}"
    headers:
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tradeshift:
    name: "Tradeshift"
    method: "GET"
    url: "https://api-sandbox.tradeshift.com/tradeshift/rest/external/account/users"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tradier:
    name: "Tradier"
    method: "GET"
    url: "https://api.tradier.com/v1/user/profile"
    headers:
      Authorization: "Bearer {{.TOKEN}}"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  travelpayouts:
    name: "Travelpayouts"
    method: "GET"
    url: "https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&limit=30&show_to_affiliates=true&sorting=price&trip_class=0"
    headers:
      x-access-token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  travisci:
    name: "Travis CI"
    method: "GET"
    url: "https://api.travis-ci.org/repos"
    headers:
      Travis-API-Version: "3"
      Authorization: "token {{.Access_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  trayio:
    name: "Tray.io"
    method: "GET"
    url: "https://api.tray.io/core/v1/connectors"
    headers:
      Authorization: "Bearer API_Token"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  truelayer:
    name: "TrueLayer"
    method: "GET"
    url: "https://api.truelayer.com/data/v1/accounts"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  truework:
    name: "Truework"
    method: "GET"
    url: "https://api.truework.com/companies?q={{.Search_Query}}"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  twist:
    name: "Twist"
    method: "GET"
    url: "https://api.twist.com/api/v3/workspaces/get_default"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  twitterapikeysecret:
    name: "Twitter - API_Key/Secret"
    method: "POST"
    url: "https://api.twitter.com/oauth2/token"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  twitteraccesstoken:
    name: "Twitter - Access_Token"
    method: "GET"
    url: "https://api.twitter.com/1.1/account_activity/all/subscriptions/count.json"
    headers:
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  twitterclientidsecret:
    name: "Twitter - Client_ID/Secret"
    method: "POST"
    url: "https://api.twitter.com/oauth2/token"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  tly:
    name: "Tély"
    method: "GET"
    url: "https://t.ly/api/v1/link?short_url={{.Short_URL}}"
    headers:
      Authorization: "Bearer {{.Key}}"
      Content-Type: "application/json"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  upcdatabase:
    name: "UPC Database"
    method: "GET"
    url: "https://api.upcdatabase.org/account"
    headers:
      Authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  uber:
    name: "Uber"
    method: "GET"
    url: "https://api.uber.com/v1.2/me"
    headers:
      Authorization: "Bearer {{.TOKEN}}"
      Accept-Language: "en_US"
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ubidots:
    name: "Ubidots"
    method: "GET"
    url: "https://industrial.api.ubidots.com/api/v1.6/variables/"
    headers:
      Content-Type: "application/json"
      X-Auth-Token: "{{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  udemy:
    name: "Udemy"
    method: "GET"
    url: "https://www.udemy.com/instructor-api/v1/taught-courses/courses/"
    headers:
      Authorization: "bearer {{.Secret_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  unsplash:
    name: "Unsplash"
    method: "GET"
    url: "https://api.unsplash.com/photos/?client_id={{.Access_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  uplead:
    name: "UpLead"
    method: "GET"
    url: "https://api.uplead.com/v2/credits"
    headers:
      Authorization: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  uploadcare:
    name: "UploadCare"
    method: "GET"
    url: "https://api.uploadcare.com/project/"
    headers:
      Content-Type: "application/json"
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  uptimerobot:
    name: "UptimeRobot"
    method: "POST"
    url: "https://api.uptimerobot.com/v2/getMonitors?api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  upwave:
    name: "Upwave"
    method: "GET"
    url: "https://api.upwave.io/workspaces/"
    headers:
      Content-Type: "application/json"
      Authorization: "Token {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  urlscan:
    name: "UrlScan"
    method: "GET"
    url: "https://urlscan.io/user/quotas/"
    headers:
      Content-Type: "application/json"
      API-Key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  userstack:
    name: "UserStack"
    method: "GET"
    url: "https://api.userstack.com/api/detect?access_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  usercom:
    name: "User.com"
    method: "GET"
    url: "https://secretscanner.user.com/api/public/users/"
    headers:
      Authorization: "Token {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  vbout:
    name: "VBOUT"
    method: "GET"
    url: "https://api.vbout.com/1/app/me.json?key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  vmware:
    name: "VMware"
    method: "GET"
    url: "https://network.tanzu.vmware.com/api/v2/user_groups"
    headers:
      Authorization: "Bearer {{.access_token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  voodoosms:
    name: "VOODOO SMS"
    method: "GET"
    url: "https://api.voodoosms.com/credits"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  vpnapiio:
    name: "VPNAPI.io"
    method: "GET"
    url: "https://vpnapi.io/api/{{.IP}}?key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  vagrantbyhashi:
    name: "Vagrant by Hashi"
    method: "GET"
    url: "https://app.vagrantup.com/api/v2/authenticate"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  valimail:
    name: "Valimail"
    method: "GET"
    url: "https://api.valimail.com/accounts/"
    headers:
      Authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  veem:
    name: "Veem"
    method: "GET"
    url: "https://sandbox-api.veem.com/oauth/token"
    headers:
      Authorization: "Basic {{.Key}}"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  veevasystems:
    name: "Veeva Systems"
    method: "GET"
    url: "https://myvault.veevavault.com/api/"
    headers:
      Authorization: "{{.SESSION_ID}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  vercel:
    name: "Vercel"
    method: "GET"
    url: "https://api.vercel.com/v2/user"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  verimailio:
    name: "Verimail.io"
    method: "GET"
    url: "https://api.verimail.io/v3/verify?key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  veriphone:
    name: "Veriphone"
    method: "GET"
    url: "https://api.veriphone.io/v2/verify?key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  verkada:
    name: "Verkada"
    method: "GET"
    url: "https://api.verkada.com/core/v1/audit_log?org_id={{.Org_ID}}&page_size=100"
    headers:
      accept: "application/json"
      x-api-key: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  versioneye:
    name: "VersionEye"
    method: "GET"
    url: "https://www.versioneye.com/api/v1/scans"
    headers:
      apiKey: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  viglink:
    name: "VigLink"
    method: "GET"
    url: "https://rest.viglink.com/api/account/campaigns"
    headers:
      Authorization: "secret {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  virtualearth:
    name: "VirtualEarth"
    method: "GET"
    url: "https://dev.virtualearth.net/REST/v1/Locations?CountryRegion=US&adminDistrict=WA&locality=Somewhere&postalCode=98001&addressLine=100%20Main%20St.&key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  virustotal:
    name: "VirusTotal"
    method: "POST"
    url: "https://www.virustotal.com/vtapi/v2/url/scan"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  visualcrossing:
    name: "Visual Crossing"
    method: "GET"
    url: "https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/LA?key={{.API_KEY}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  voiceflow:
    name: "Voiceflow"
    method: "GET"
    url: "https://api.voiceflow.com/v3alpha/vft/{{.PROJECT_ID}}/specs"
    headers:
      Authorization: "{{.API_KEY}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  voicegain:
    name: "Voicegain"
    method: "GET"
    url: "https://api.voicegain.ai/v1/sa/config"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  vyte:
    name: "Vyte"
    method: "GET"
    url: "https://api.vyte.in/v2/events"
    headers:
      Accept: "application/vnd.vyte+json; version=3"
      Authorization: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  wpengine:
    name: "WP Engine"
    method: "GET"
    url: "https://api.wpengine.com/1.2/?method=site&account_name={{.ACCOUNT_NAME}}&wpe_apikey={{.API}}ـKEY"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  wakatime:
    name: "WakaTime"
    method: "GET"
    url: "https://wakatime.com/api/v1/users/current?api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  walkscore:
    name: "Walk Score"
    method: "GET"
    url: "https://transit.walkscore.com/transit/search/stops/?lat=47.6101359&lon=-122.3420567&wsapikey={{.API_KEY}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  watsi:
    name: "Watsi"
    method: "GET"
    url: "https://watsi.org/profile/{{.Key}}.json"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  wepay:
    name: "WePay"
    method: "GET"
    url: "https://stage.wepayapi.com/v2/user"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  weatherstack:
    name: "WeatherStack"
    method: "GET"
    url: "https://api.weatherstack.com/current?access_key={{.Key}}&query=New%20York"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  weatherbitio:
    name: "Weatherbit.io 🇺🇦"
    method: "GET"
    url: "https://api.weatherbit.io/v2.0/alerts?key={{.API_KEY}}"
    headers:
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  weatherstack1:
    name: "Weatherstack"
    method: "GET"
    url: "https://api.weatherstack.com/current?access_key={{.Access_Key}}&query=NewYork"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  web3storage:
    name: "Web3.Storage"
    method: "GET"
    url: "https://api.web3.storage/user/uploads"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  webscrapingapi:
    name: "WebScrapingAPI"
    method: "GET"
    url: "https://api.webscrapingapi.com/v1?api_key={{.API_KEY}}&url=https://www.google.com"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  webscraper:
    name: "Web Scraper"
    method: "GET"
    url: "https://api.webscraper.io/api/v1/sitemaps?api_token={{.API_TOKEN}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  webflow:
    name: "Webflow"
    method: "GET"
    url: "https://api.webflow.com/v2/token/authorized_by"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  weglot:
    name: "Weglot"
    method: "POST"
    url: "https://api.weglot.com/translate?api_key={{.api_key}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  whoxy:
    name: "Whoxy"
    method: "GET"
    url: "https://api.whoxy.com/?key={{.API_KEY}}&account=balance"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  wise:
    name: "Wise"
    method: "GET"
    url: "https://api.sandbox.transferwise.tech/v1/me"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  wisesandbox:
    name: "Wise - Sandbox"
    method: "GET"
    url: "https://api.sandbox.transferwise.tech/v1/me"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  wish:
    name: "Wish"
    method: "GET"
    url: "https://merchant.wish.com/api/v3/oauth/test"
    headers:
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  wistia:
    name: "Wistia"
    method: "GET"
    url: "https://api.wistia.com/v1/account.json"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  witai:
    name: "Wit.ai"
    method: "GET"
    url: "https://api.wit.ai/message?v=20230215&q=temperature&n=3"
    headers:
      Authorization: "Bearer {{.ACCESS_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  woopra:
    name: "Woopra"
    method: "GET"
    url: "https://www.woopra.com/rest/3.10/profile?project={{.Project_Name}}&key={{.Key}}&value="
    headers:
      authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: true
    secret_name: "secret"

  wootricaccesstoken:
    name: "Wootric - Access_Token"
    method: "GET"
    url: "https://api.wootric.com/v1/end_users"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  wootricclientidsecret:
    name: "Wootric - Client_ID/Secret"
    method: "POST"
    url: "https://api.wootric.com/oauth/token"
    headers:
      content-type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  workboard:
    name: "WorkBoard"
    method: "GET"
    url: "https://demo.biz.wobo-int.com/wb/apis/user"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  workable:
    name: "Workable"
    method: "GET"
    url: "https://www.workable.com/spi/v3/accounts/"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  workstack:
    name: "Workstack"
    method: "GET"
    url: "https://app.workstack.io/api/team?api_token={{.API_TOKEN}}"
    headers:
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  worldcoinindex:
    name: "WorldCoinIndex"
    method: "GET"
    url: "https://www.worldcoinindex.com/apiservice/ticker?key={{.API_KEY}}&label=ethbtc-ltcbtc&fiat=btc"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  worldweatheronline:
    name: "World Weather Online"
    method: "GET"
    url: "https://api.worldweatheronline.com/premium/v1/search.ashx?query=LA&key={{.API_KEY}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  wrike:
    name: "Wrike"
    method: "GET"
    url: "https://www.wrike.com/api/v4/groups"
    headers:
      Authorization: "bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  xero:
    name: "Xero"
    method: "GET"
    url: "https://api.xero.com/api.xro/2.0/Users"
    headers:
      accept: "application/json"
      Authorization: "Bearer {{.JWT_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  yahoo:
    name: "Yahoo"
    method: "GET"
    url: "https://api.login.yahoo.com/openid/v1/userinfo"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  yammer:
    name: "Yammer"
    method: "GET"
    url: "https://www.yammer.com/api/v1/users.json"
    headers:
      Authorization: "Bearer {{.API_KEY}}"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  yandex:
    name: "Yandex"
    method: "GET"
    url: "https://dictionary.yandex.net/api/v1/dicservice.json/getLangs?key={{.API_KEY}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  yapstonesandbox:
    name: "Yapstone - Sandbox"
    method: "GET"
    url: "https://api-prod-sandbox.yapstone.com/v2/onboarding/assets/{{.Asset_ID}}"
    headers:
      Authorization: "Bearer {{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  yelp:
    name: "Yelp"
    method: "GET"
    url: "https://api.yelp.com/v3/categories"
    headers:
      Authorization: "{{.Key}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  yousignappsandbox:
    name: "YouSign App - Sandbox"
    method: "GET"
    url: "https://api-sandbox.yousign.app/v3/users"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  youtube:
    name: "YouTube"
    method: "GET"
    url: "https://www.googleapis.com/youtube/v3/activities?part=contentDetails&maxResults=25&channelId={{.Channel_ID}}&key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  youtube1:
    name: "Youtube"
    method: "GET"
    url: "https://www.googleapis.com/youtube/v3/channelSections?key={{.API_KEY}}&channelId={{.CHANNEL_ID}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zapier:
    name: "Zapier"
    method: "GET"
    url: "https://api.zapier.com/v2/apps"
    headers:
      Accept: "application/vnd.api+json"
      Authorization: "{{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zeit:
    name: "Zeit"
    method: "GET"
    url: "https://zeit.io/api/v1/usr"
    headers:
      accept: "application/json"
      apiKey: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zeitio:
    name: "Zeit.io"
    method: "GET"
    url: "https://zeit.io/api/v1/usr"
    headers:
      accept: "application/json"
      apiKey: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zenrows:
    name: "ZenRows"
    method: "GET"
    url: "https://api.zenrows.com/v1/?apikey={{.API_KEY}}&url=https://www.google.com"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zenefits:
    name: "Zenefits"
    method: "GET"
    url: "https://api.zenefits.com/core/me"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zenkit:
    name: "Zenkit"
    method: "GET"
    url: "https://base.zenkit.com/api/v1/users/me"
    headers:
      Zenkit-API-Key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zenput:
    name: "Zenput"
    method: "GET"
    url: "https://staging.zenput.com/api/v3/users/{{.User_ID}}"
    headers:
      X-API-TOKEN: "{{.API_TOKEN}}"
      accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zeplin:
    name: "Zeplin"
    method: "GET"
    url: "https://api.zeplin.dev/v1/users/me"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zerobounce:
    name: "ZeroBounce"
    method: "GET"
    url: "https://api.zerobounce.net/v2/activity?email={{.Email}}&api_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zerossl:
    name: "ZeroSSL"
    method: "GET"
    url: "https://api.zerossl.com/certificates?access_key={{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zerotier:
    name: "ZeroTier,"
    method: "GET"
    url: "https://api.zerotier.com/api/v1/network"
    headers:
      Authorization: "token {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zinc:
    name: "Zinc"
    method: "GET"
    url: "https://api.zinc.io/v1/clients"
    headers:
      Authorization: "Basic {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    auth_type: "basic"
    auth_user: "{{.Key}}"
    auth_pass: ""
    success_status: 200
    response_type: "json"
    requires_secret: false

  zuoraclientidsecret:
    name: "Zuora - Client_ID/Secret"
    method: "POST"
    url: "https://rest.zuora.com/oauth/token"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  besttime1:
    name: "besttime"
    method: "GET"
    url: "https://besttime.app/api/v1/keys/{{.API_KEY}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  bexio:
    name: "bexio"
    method: "GET"
    url: "https://api.bexio.com/3.0/users"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  checkvistnews:
    name: "checkvist_news"
    method: "GET"
    url: "https://checkvist.com/auth/login.json?version=2"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  commoditiesapi:
    name: "commodities-api"
    method: "GET"
    url: "https://commodities-api.com/api/latest?access_key={{.Access_Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  currencyfreaks:
    name: "currencyfreaks"
    method: "GET"
    url: "https://api.currencyfreaks.com/v2.0/rates/latest?apikey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  dataai:
    name: "data.ai"
    method: "GET"
    url: "https://api.data.ai/v1.3/accounts?page_index=0"
    headers:
      Authorization: "Bearer {{.Access_token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fileio:
    name: "file.io"
    method: "GET"
    url: "https://file.io/"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  fixer1:
    name: "fixer"
    method: "GET"
    url: "https://data.fixer.io/api/latest?access_key={{.Access_Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  getfestivocom:
    name: "getfestivo.com"
    method: "GET"
    url: "https://api.getfestivo.com/v2/holidays?country=US&api_key={{.Key}}&year=2020"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  html2pdf:
    name: "html2pdf"
    method: "GET"
    url: "https://api.html2pdf.app/v1/generate?url={{.URL}}&apiKey={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  ipapi:
    name: "ipapi"
    method: "GET"
    url: "http://api.ipapi.com/api/161.185.160.93?access_key={{.Key}}"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  orbintelligencecom:
    name: "orb-intelligence.com"
    method: "GET"
    url: "https://api.orb-intelligence.com/3/fetch/1/?api_key={{.Key}}"
    headers:
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  protocolsio:
    name: "protocols.io"
    method: "GET"
    url: "https://www.protocols.io/api/v3/session/profile"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  reminders:
    name: "reminders"
    method: "GET"
    url: "https://reminders-api.com/api/user"
    headers:
      Authorization: "Bearer {{.Access_token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  removebg:
    name: "remove.bg"
    method: "GET"
    url: "https://api.remove.bg/v1.0/account"
    headers:
      accept: "*/*"
      X-API-Key: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  scrutinizerci:
    name: "scrutinizer ci"
    method: "GET"
    url: "https://scrutinizer-ci.com/api/user/repositories?access_token={{.Key}}"
    headers:
      Content-Type: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tly1:
    name: "t.ly"
    method: "GET"
    url: "https://t.ly/api/v1/link/stats?short_url=https://www.google.com"
    headers:
      Authorization: "Bearer {{.API_TOKEN}}"
      Content-Type: "application/json"
      Accept: "application/json"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  tyntec:
    name: "tyntec"
    method: "GET"
    url: "https://api.tyntec.com/2fa/v4/profiles"
    headers:
      Accept: "application/json"
      apiKey: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  userstack1:
    name: "userstack"
    method: "GET"
    url: "https://api.userstack.com/detect?access_key={{.Access_Key}}&ua=Mozilla/5.0"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  viewneo:
    name: "viewneo"
    method: "GET"
    url: "https://cloud.viewneo.com/api/v1.0/playlist"
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{.API_TOKEN}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zenscrape:
    name: "zenscrape"
    method: "GET"
    url: "https://app.zenscrape.com/api/v1/status"
    headers:
      apikey: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zenserp:
    name: "zenserp"
    method: "GET"
    url: "https://app.zenserp.com/api/v2/status"
    headers:
      apikey: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zipcodeapi:
    name: "zipcodeapi"
    method: "GET"
    url: "https://www.zipcodeapi.com/rest/{{.API_KEY}}/distance.json/71601/72959/mile"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  zipcodebase:
    name: "zipcodebase"
    method: "GET"
    url: "https://app.zipcodebase.com/api/v1/status"
    headers:
      apikey: "{{.API_KEY}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  blockchain:
    name: "Академия Blockchain Образования"
    method: "GET"
    url: "https://api.blockchain.com/v3/exchange/accounts"
    headers:
      X-API-Token: "{{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  daily:
    name: "Афиша Daily"
    method: "GET"
    url: "https://api.daily.co/v1/"
    headers:
      Authorization: "Bearer {{.Key}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  adoptapet:
    name: "Подбери Друга. Adopt a pet"
    method: "GET"
    url: "https://api.adoptapet.com/search/pets_at_shelter?key={{.YOUR_API_KEY}}&v=2&output=json&shelter_id=79570&start_number=1&end_number=500"
    headers:
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false

  front1:
    name: "学習塾FRONT"
    method: "GET"
    url: "https://api2.frontapp.com/channels"
    headers:
      accept: "application/json"
      authorization: "Bearer {{.Auth_Token}}"
      User-Agent: "{{.UserAgent}}"
    success_status: 200
    response_type: "json"
    requires_secret: false
